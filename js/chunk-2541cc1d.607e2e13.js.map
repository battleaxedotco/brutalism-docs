{"version":3,"sources":["webpack:///./node_modules/commonmark/lib/node.js","webpack:///./node_modules/commonmark/node_modules/entities/lib/encode.js","webpack:///./node_modules/commonmark/node_modules/entities/lib/decode_codepoint.js","webpack:///./node_modules/commonmark/node_modules/entities/lib/decode.js","webpack:///./node_modules/commonmark/node_modules/entities/index.js","webpack:///./node_modules/commonmark/lib/inlines.js","webpack:///./node_modules/commonmark/lib/render/html.js","webpack:///./node_modules/commonmark/lib/from-code-point.js","webpack:///./node_modules/mdurl/encode.js","webpack:///./node_modules/commonmark/lib/render/renderer.js","webpack:///./node_modules/commonmark/lib/render/xml.js","webpack:///./node_modules/commonmark/lib/index.js","webpack:///./node_modules/string.prototype.repeat/repeat.js","webpack:///./node_modules/commonmark/lib/common.js","webpack:///./node_modules/commonmark/lib/normalize-reference.js","webpack:///./node_modules/commonmark/lib/blocks.js"],"names":["isContainer","node","_type","resumeAt","entering","this","current","next","cur","container","_firstChild","root","_next","_parent","NodeWalker","Node","nodeType","sourcepos","_lastChild","_prev","_sourcepos","_lastLineBlank","_lastLineChecked","_open","_string_content","_literal","_listData","_info","_destination","_title","_isFenced","_fenceChar","_fenceLength","_fenceOffset","_level","_onEnter","_onExit","proto","prototype","Object","defineProperty","get","set","s","type","t","tight","start","n","delimiter","delim","appendChild","child","unlink","prependChild","insertAfter","sibling","insertBefore","walker","module","exports","inverseXML","getInverseObj","xmlReplacer","getInverseReplacer","XML","getInverse","inverseHTML","htmlReplacer","obj","keys","sort","reduce","inverse","name","single","multiple","forEach","k","length","push","unshift","join","RegExp","HTML","re_nonASCII","re_astralSymbols","singleCharReplacer","c","charCodeAt","toString","toUpperCase","astralReplacer","high","low","codePoint","re","func","data","replace","re_xmlChars","escapeXML","escape","decodeMap","decodeCodePoint","output","String","fromCharCode","entityMap","legacyMap","xmlMap","decodeXMLStrict","getStrictDecoder","decodeHTMLStrict","map","getReplacer","str","decodeHTML","legacy","sorter","i","j","replacer","substr","a","b","charAt","parseInt","slice","HTMLStrict","encode","decode","level","decodeStrict","encodeXML","encodeHTML4","encodeHTML5","encodeHTML","decodeXML","decodeHTML4","decodeHTML5","decodeHTML4Strict","decodeHTML5Strict","common","normalizeReference","normalizeURI","unescapeString","fromCodePoint","C_NEWLINE","C_ASTERISK","C_UNDERSCORE","C_BACKTICK","C_OPEN_BRACKET","C_CLOSE_BRACKET","C_LESSTHAN","C_BANG","C_BACKSLASH","C_AMPERSAND","C_OPEN_PAREN","C_CLOSE_PAREN","C_COLON","C_SINGLEQUOTE","C_DOUBLEQUOTE","ESCAPABLE","ESCAPED_CHAR","ENTITY","reHtmlTag","rePunctuation","reLinkTitle","reLinkDestinationBraces","reEscapable","reEntityHere","reTicks","reTicksHere","reEllipses","reDash","reEmailAutolink","reAutolink","reSpnl","reWhitespaceChar","reUnicodeWhitespaceChar","reFinalSpace","reInitialSpace","reSpaceAtEndOfLine","reLinkLabel","reMain","text","match","m","exec","subject","pos","index","peek","spnl","parseBackticks","block","ticks","matched","contents","afterOpenTicks","parseBackslash","subj","test","parseAutolink","dest","parseHtmlTag","scanDelims","cc","char_before","char_after","cc_after","left_flanking","right_flanking","can_open","can_close","after_is_whitespace","after_is_punctuation","before_is_whitespace","before_is_punctuation","numdelims","startpos","handleDelim","res","options","smart","delimiters","origdelims","previous","removeDelimiter","removeDelimitersBetween","bottom","top","processEmphasis","stack_bottom","opener","closer","old_closer","opener_inl","closer_inl","tempstack","use_delims","tmp","opener_found","openers_bottom","odd_match","closercc","emph","literal","parseLinkTitle","title","parseLinkDestination","savepos","openparens","parseLinkLabel","parseOpenBracket","addBracket","parseBang","parseCloseBracket","is_image","reflabel","brackets","active","removeBracket","image","beforelabel","bracketAfter","link","refmap","destination","previousDelimiter","parseEntity","parseString","chars","enCount","emCount","repeat","parseNewline","lastc","hardbreak","parseReference","rawlabel","matchChars","beforetitle","atLineEnd","normlabel","parseInline","parseInlines","trim","InlineParser","parse","Renderer","reUnsafeProtocol","reSafeDataProtocol","potentiallyUnsafe","url","tag","attrs","selfclosing","disableTags","buffer","attrib","undefined","lastOut","HtmlRenderer","softbreak","out","lit","linebreak","cr","safe","esc","strong","paragraph","grandparent","parent","listTight","heading","tagname","code","code_block","info_words","info","split","thematic_break","block_quote","list","listType","listStart","item","html_inline","html_block","custom_inline","onEnter","onExit","custom_block","att","create","escapeXml","_","e","RangeError","stringFromCharCode","floor","Math","highSurrogate","lowSurrogate","MAX_SIZE","codeUnits","arguments","result","Number","isFinite","apply","encodeCache","getEncodeCache","exclude","ch","cache","string","keepEscaped","l","nextCode","defaultChars","encodeURIComponent","componentChars","render","ast","event","reXMLTag","toTagName","toLowerCase","XmlRenderer","indentLevel","indent","selfClosing","nodetype","time","console","listDelimiter","delimword","timeEnd","Parser","object","$defineProperty","error","count","TypeError","Infinity","TAGNAME","ATTRIBUTENAME","UNQUOTEDVALUE","SINGLEQUOTEDVALUE","DOUBLEQUOTEDVALUE","ATTRIBUTEVALUE","ATTRIBUTEVALUESPEC","ATTRIBUTE","OPENTAG","CLOSETAG","HTMLCOMMENT","PROCESSINGINSTRUCTION","DECLARATION","CDATA","HTMLTAG","reBackslashOrAmp","reEntityOrEscapedChar","XMLSPECIAL","reXmlSpecial","unescapeChar","uri","err","replaceUnsafeChar","regex","$0","CODE_INDENT","C_TAB","C_GREATERTHAN","C_SPACE","reHtmlBlockOpen","reHtmlBlockClose","reThematicBreak","reMaybeSpecial","reNonSpace","reBulletListMarker","reOrderedListMarker","reATXHeadingMarker","reCodeFence","reClosingCodeFence","reSetextHeadingLine","reLineEnding","isBlank","isSpaceOrTab","ln","endsWithBlankLine","addLine","partiallyConsumedTab","offset","charsToTab","column","tip","currentLine","addChild","blocks","canContain","finalize","lineNumber","column_number","newBlock","parseListMarker","parser","nextc","spacesStartCol","spacesStartOffset","rest","nextNonspace","bulletChar","padding","markerOffset","advanceNextNonspace","advanceOffset","blank_item","spaces_after_marker","listsMatch","list_data","item_data","closeUnmatchedBlocks","allClosed","oldtip","lastMatchedContainer","document","continue","acceptsLines","subitem","indented","blank","lastLineLength","content","newlinePos","indexOf","firstLine","_htmlBlockType","hasReferenceDefs","inlineParser","blockStarts","fenceLength","blockType","columns","charsToAdvance","nextNonspaceColumn","findNextNonspace","cols","incorporateLine","lastChild","all_matched","doc","matchedLeaf","starts","startsLen","lastLineBlank","cont","above","processInlines","Document","input","lines","len"],"mappings":"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EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAO,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAI,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,IAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAI,EAAS,IAAO,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,IAAS,IAAS,IAAS,IAAS,IAAS,IAAS,IAAS,IAAS,IAAS,IAAS,IAAS,IAAS,IAAS,IAAS,IAAS,IAAS,IAAS,IAAS,IAAS,IAAS,IAAS,IAAS,IAAS,IAAS,IAAS,IAAS,IAAS,IAAS,IAAS,IAAS,IAAS,IAAS,IAAS,IAAS,IAAS,IAAS,IAAS,IAAS,IAAS,IAAS,IAAS,IAAS,IAAS,IAAS,IAAS,IAAS,IAAS,IAAS,IAAS,IAAS,IAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,EAAS,IAAS,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,KAAe,EAAO,KAAK,EAAS,KAAU,EAAS,KAAU,EAAS,KAAU,EAAS,MAAqB,EAAS,MAAqB,EAAS,KAAe,EAAS,KAAU,EAAS,KAAU,EAAS,KAAU,EAAS,KAAU,EAAS,KAAU,EAAS,KAAK,EAAS,KAAe,EAAS,MAAqB,EAAS,MAAqB,EAAS,MAAqB,EAAS,KAAe,EAAS,KAAe,EAAS,KAAe,EAAS,KAAe,EAAS,KAAe,EAAS,KAAe,EAAS,KAAe,EAAS,KAAe,EAAS,KAAe,EAAS,KAAe,EAAS,KAAe,EAAS,KAAe,EAAS,KAAe,EAAS,KAAe,EAAS,KAAe,EAAS,KAAe,EAAS,KAAe,EAAS,KAAe,EAAS,KAAe,EAAS,KAAe,EAAS,KAAe,EAAS,KAAe,EAAS,KAAe,EAAS,KAAe,EAAS,KAAe,EAAS,KAAe,EAAS,KAAe,EAAS,KAAe,EAAS,KAAe,EAAS,KAAe,EAAS,KAAe,EAAS,KAAe,EAAS,KAAe,EAAS,KAAe,EAAS,KAAe,EAAS,KAAe,EAAS,KAAe,EAAS,KAAe,EAAS,KAAe,EAAS,KAAe,EAAS,KAAe,EAAS,KAAe,EAAS,KAAe,EAAS,KAAe,EAAS,KAAe,EAAS,KAAe,EAAS,KAAe,EAAS,KAAe,EAAS,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","file":"js/chunk-2541cc1d.607e2e13.js","sourcesContent":["\"use strict\";\n\nfunction isContainer(node) {\n    switch (node._type) {\n    case 'document':\n    case 'block_quote':\n    case 'list':\n    case 'item':\n    case 'paragraph':\n    case 'heading':\n    case 'emph':\n    case 'strong':\n    case 'link':\n    case 'image':\n    case 'custom_inline':\n    case 'custom_block':\n        return true;\n    default:\n        return false;\n    }\n}\n\nvar resumeAt = function(node, entering) {\n    this.current = node;\n    this.entering = (entering === true);\n};\n\nvar next = function(){\n    var cur = this.current;\n    var entering = this.entering;\n\n    if (cur === null) {\n        return null;\n    }\n\n    var container = isContainer(cur);\n\n    if (entering && container) {\n        if (cur._firstChild) {\n            this.current = cur._firstChild;\n            this.entering = true;\n        } else {\n            // stay on node but exit\n            this.entering = false;\n        }\n\n    } else if (cur === this.root) {\n        this.current = null;\n\n    } else if (cur._next === null) {\n        this.current = cur._parent;\n        this.entering = false;\n\n    } else {\n        this.current = cur._next;\n        this.entering = true;\n    }\n\n    return {entering: entering, node: cur};\n};\n\nvar NodeWalker = function(root) {\n    return { current: root,\n             root: root,\n             entering: true,\n             next: next,\n             resumeAt: resumeAt };\n};\n\nvar Node = function(nodeType, sourcepos) {\n    this._type = nodeType;\n    this._parent = null;\n    this._firstChild = null;\n    this._lastChild = null;\n    this._prev = null;\n    this._next = null;\n    this._sourcepos = sourcepos;\n    this._lastLineBlank = false;\n    this._lastLineChecked = false;\n    this._open = true;\n    this._string_content = null;\n    this._literal = null;\n    this._listData = {};\n    this._info = null;\n    this._destination = null;\n    this._title = null;\n    this._isFenced = false;\n    this._fenceChar = null;\n    this._fenceLength = 0;\n    this._fenceOffset = null;\n    this._level = null;\n    this._onEnter = null;\n    this._onExit = null;\n};\n\nvar proto = Node.prototype;\n\nObject.defineProperty(proto, 'isContainer', {\n    get: function () { return isContainer(this); }\n});\n\nObject.defineProperty(proto, 'type', {\n    get: function() { return this._type; }\n});\n\nObject.defineProperty(proto, 'firstChild', {\n    get: function() { return this._firstChild; }\n});\n\nObject.defineProperty(proto, 'lastChild', {\n    get: function() { return this._lastChild; }\n});\n\nObject.defineProperty(proto, 'next', {\n    get: function() { return this._next; }\n});\n\nObject.defineProperty(proto, 'prev', {\n    get: function() { return this._prev; }\n});\n\nObject.defineProperty(proto, 'parent', {\n    get: function() { return this._parent; }\n});\n\nObject.defineProperty(proto, 'sourcepos', {\n    get: function() { return this._sourcepos; }\n});\n\nObject.defineProperty(proto, 'literal', {\n    get: function() { return this._literal; },\n    set: function(s) { this._literal = s; }\n});\n\nObject.defineProperty(proto, 'destination', {\n    get: function() { return this._destination; },\n    set: function(s) { this._destination = s; }\n});\n\nObject.defineProperty(proto, 'title', {\n    get: function() { return this._title; },\n    set: function(s) { this._title = s; }\n});\n\nObject.defineProperty(proto, 'info', {\n    get: function() { return this._info; },\n    set: function(s) { this._info = s; }\n});\n\nObject.defineProperty(proto, 'level', {\n    get: function() { return this._level; },\n    set: function(s) { this._level = s; }\n});\n\nObject.defineProperty(proto, 'listType', {\n    get: function() { return this._listData.type; },\n    set: function(t) { this._listData.type = t; }\n});\n\nObject.defineProperty(proto, 'listTight', {\n    get: function() { return this._listData.tight; },\n    set: function(t) { this._listData.tight = t; }\n});\n\nObject.defineProperty(proto, 'listStart', {\n    get: function() { return this._listData.start; },\n    set: function(n) { this._listData.start = n; }\n});\n\nObject.defineProperty(proto, 'listDelimiter', {\n    get: function() { return this._listData.delimiter; },\n    set: function(delim) { this._listData.delimiter = delim; }\n});\n\nObject.defineProperty(proto, 'onEnter', {\n    get: function() { return this._onEnter; },\n    set: function(s) { this._onEnter = s; }\n});\n\nObject.defineProperty(proto, 'onExit', {\n    get: function() { return this._onExit; },\n    set: function(s) { this._onExit = s; }\n});\n\nNode.prototype.appendChild = function(child) {\n    child.unlink();\n    child._parent = this;\n    if (this._lastChild) {\n        this._lastChild._next = child;\n        child._prev = this._lastChild;\n        this._lastChild = child;\n    } else {\n        this._firstChild = child;\n        this._lastChild = child;\n    }\n};\n\nNode.prototype.prependChild = function(child) {\n    child.unlink();\n    child._parent = this;\n    if (this._firstChild) {\n        this._firstChild._prev = child;\n        child._next = this._firstChild;\n        this._firstChild = child;\n    } else {\n        this._firstChild = child;\n        this._lastChild = child;\n    }\n};\n\nNode.prototype.unlink = function() {\n    if (this._prev) {\n        this._prev._next = this._next;\n    } else if (this._parent) {\n        this._parent._firstChild = this._next;\n    }\n    if (this._next) {\n        this._next._prev = this._prev;\n    } else if (this._parent) {\n        this._parent._lastChild = this._prev;\n    }\n    this._parent = null;\n    this._next = null;\n    this._prev = null;\n};\n\nNode.prototype.insertAfter = function(sibling) {\n    sibling.unlink();\n    sibling._next = this._next;\n    if (sibling._next) {\n        sibling._next._prev = sibling;\n    }\n    sibling._prev = this;\n    this._next = sibling;\n    sibling._parent = this._parent;\n    if (!sibling._next) {\n        sibling._parent._lastChild = sibling;\n    }\n};\n\nNode.prototype.insertBefore = function(sibling) {\n    sibling.unlink();\n    sibling._prev = this._prev;\n    if (sibling._prev) {\n        sibling._prev._next = sibling;\n    }\n    sibling._next = this;\n    this._prev = sibling;\n    sibling._parent = this._parent;\n    if (!sibling._prev) {\n        sibling._parent._firstChild = sibling;\n    }\n};\n\nNode.prototype.walker = function() {\n    var walker = new NodeWalker(this);\n    return walker;\n};\n\nmodule.exports = Node;\n\n\n/* Example of use of walker:\n\n var walker = w.walker();\n var event;\n\n while (event = walker.next()) {\n console.log(event.entering, event.node.type);\n }\n\n */\n","var inverseXML = getInverseObj(require(\"../maps/xml.json\")),\n    xmlReplacer = getInverseReplacer(inverseXML);\n\nexports.XML = getInverse(inverseXML, xmlReplacer);\n\nvar inverseHTML = getInverseObj(require(\"../maps/entities.json\")),\n    htmlReplacer = getInverseReplacer(inverseHTML);\n\nexports.HTML = getInverse(inverseHTML, htmlReplacer);\n\nfunction getInverseObj(obj) {\n    return Object.keys(obj)\n        .sort()\n        .reduce(function(inverse, name) {\n            inverse[obj[name]] = \"&\" + name + \";\";\n            return inverse;\n        }, {});\n}\n\nfunction getInverseReplacer(inverse) {\n    var single = [],\n        multiple = [];\n\n    Object.keys(inverse).forEach(function(k) {\n        if (k.length === 1) {\n            single.push(\"\\\\\" + k);\n        } else {\n            multiple.push(k);\n        }\n    });\n\n    //TODO add ranges\n    multiple.unshift(\"[\" + single.join(\"\") + \"]\");\n\n    return new RegExp(multiple.join(\"|\"), \"g\");\n}\n\nvar re_nonASCII = /[^\\0-\\x7F]/g,\n    re_astralSymbols = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n\nfunction singleCharReplacer(c) {\n    return (\n        \"&#x\" +\n        c\n            .charCodeAt(0)\n            .toString(16)\n            .toUpperCase() +\n        \";\"\n    );\n}\n\nfunction astralReplacer(c) {\n    // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n    var high = c.charCodeAt(0);\n    var low = c.charCodeAt(1);\n    var codePoint = (high - 0xd800) * 0x400 + low - 0xdc00 + 0x10000;\n    return \"&#x\" + codePoint.toString(16).toUpperCase() + \";\";\n}\n\nfunction getInverse(inverse, re) {\n    function func(name) {\n        return inverse[name];\n    }\n\n    return function(data) {\n        return data\n            .replace(re, func)\n            .replace(re_astralSymbols, astralReplacer)\n            .replace(re_nonASCII, singleCharReplacer);\n    };\n}\n\nvar re_xmlChars = getInverseReplacer(inverseXML);\n\nfunction escapeXML(data) {\n    return data\n        .replace(re_xmlChars, singleCharReplacer)\n        .replace(re_astralSymbols, astralReplacer)\n        .replace(re_nonASCII, singleCharReplacer);\n}\n\nexports.escape = escapeXML;\n","var decodeMap = require(\"../maps/decode.json\");\n\nmodule.exports = decodeCodePoint;\n\n// modified version of https://github.com/mathiasbynens/he/blob/master/src/he.js#L94-L119\nfunction decodeCodePoint(codePoint) {\n    if ((codePoint >= 0xd800 && codePoint <= 0xdfff) || codePoint > 0x10ffff) {\n        return \"\\uFFFD\";\n    }\n\n    if (codePoint in decodeMap) {\n        codePoint = decodeMap[codePoint];\n    }\n\n    var output = \"\";\n\n    if (codePoint > 0xffff) {\n        codePoint -= 0x10000;\n        output += String.fromCharCode(((codePoint >>> 10) & 0x3ff) | 0xd800);\n        codePoint = 0xdc00 | (codePoint & 0x3ff);\n    }\n\n    output += String.fromCharCode(codePoint);\n    return output;\n}\n","var entityMap = require(\"../maps/entities.json\"),\n    legacyMap = require(\"../maps/legacy.json\"),\n    xmlMap = require(\"../maps/xml.json\"),\n    decodeCodePoint = require(\"./decode_codepoint.js\");\n\nvar decodeXMLStrict = getStrictDecoder(xmlMap),\n    decodeHTMLStrict = getStrictDecoder(entityMap);\n\nfunction getStrictDecoder(map) {\n    var keys = Object.keys(map).join(\"|\"),\n        replace = getReplacer(map);\n\n    keys += \"|#[xX][\\\\da-fA-F]+|#\\\\d+\";\n\n    var re = new RegExp(\"&(?:\" + keys + \");\", \"g\");\n\n    return function(str) {\n        return String(str).replace(re, replace);\n    };\n}\n\nvar decodeHTML = (function() {\n    var legacy = Object.keys(legacyMap).sort(sorter);\n\n    var keys = Object.keys(entityMap).sort(sorter);\n\n    for (var i = 0, j = 0; i < keys.length; i++) {\n        if (legacy[j] === keys[i]) {\n            keys[i] += \";?\";\n            j++;\n        } else {\n            keys[i] += \";\";\n        }\n    }\n\n    var re = new RegExp(\"&(?:\" + keys.join(\"|\") + \"|#[xX][\\\\da-fA-F]+;?|#\\\\d+;?)\", \"g\"),\n        replace = getReplacer(entityMap);\n\n    function replacer(str) {\n        if (str.substr(-1) !== \";\") str += \";\";\n        return replace(str);\n    }\n\n    //TODO consider creating a merged map\n    return function(str) {\n        return String(str).replace(re, replacer);\n    };\n})();\n\nfunction sorter(a, b) {\n    return a < b ? 1 : -1;\n}\n\nfunction getReplacer(map) {\n    return function replace(str) {\n        if (str.charAt(1) === \"#\") {\n            if (str.charAt(2) === \"X\" || str.charAt(2) === \"x\") {\n                return decodeCodePoint(parseInt(str.substr(3), 16));\n            }\n            return decodeCodePoint(parseInt(str.substr(2), 10));\n        }\n        return map[str.slice(1, -1)];\n    };\n}\n\nmodule.exports = {\n    XML: decodeXMLStrict,\n    HTML: decodeHTML,\n    HTMLStrict: decodeHTMLStrict\n};\n","var encode = require(\"./lib/encode.js\"),\n    decode = require(\"./lib/decode.js\");\n\nexports.decode = function(data, level) {\n    return (!level || level <= 0 ? decode.XML : decode.HTML)(data);\n};\n\nexports.decodeStrict = function(data, level) {\n    return (!level || level <= 0 ? decode.XML : decode.HTMLStrict)(data);\n};\n\nexports.encode = function(data, level) {\n    return (!level || level <= 0 ? encode.XML : encode.HTML)(data);\n};\n\nexports.encodeXML = encode.XML;\n\nexports.encodeHTML4 = exports.encodeHTML5 = exports.encodeHTML = encode.HTML;\n\nexports.decodeXML = exports.decodeXMLStrict = decode.XML;\n\nexports.decodeHTML4 = exports.decodeHTML5 = exports.decodeHTML = decode.HTML;\n\nexports.decodeHTML4Strict = exports.decodeHTML5Strict = exports.decodeHTMLStrict = decode.HTMLStrict;\n\nexports.escape = encode.escape;\n","\"use strict\";\n\nvar Node = require('./node');\nvar common = require('./common');\nvar normalizeReference = require('./normalize-reference');\n\nvar normalizeURI = common.normalizeURI;\nvar unescapeString = common.unescapeString;\nvar fromCodePoint = require('./from-code-point.js');\nvar decodeHTML = require('entities').decodeHTML;\nrequire('string.prototype.repeat'); // Polyfill for String.prototype.repeat\n\n// Constants for character codes:\n\nvar C_NEWLINE = 10;\nvar C_ASTERISK = 42;\nvar C_UNDERSCORE = 95;\nvar C_BACKTICK = 96;\nvar C_OPEN_BRACKET = 91;\nvar C_CLOSE_BRACKET = 93;\nvar C_LESSTHAN = 60;\nvar C_BANG = 33;\nvar C_BACKSLASH = 92;\nvar C_AMPERSAND = 38;\nvar C_OPEN_PAREN = 40;\nvar C_CLOSE_PAREN = 41;\nvar C_COLON = 58;\nvar C_SINGLEQUOTE = 39;\nvar C_DOUBLEQUOTE = 34;\n\n// Some regexps used in inline parser:\n\nvar ESCAPABLE = common.ESCAPABLE;\nvar ESCAPED_CHAR = '\\\\\\\\' + ESCAPABLE;\n\nvar ENTITY = common.ENTITY;\nvar reHtmlTag = common.reHtmlTag;\n\nvar rePunctuation = new RegExp(/[!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u0AF0\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166D\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E42\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]|\\uD800[\\uDD00-\\uDD02\\uDF9F\\uDFD0]|\\uD801\\uDD6F|\\uD802[\\uDC57\\uDD1F\\uDD3F\\uDE50-\\uDE58\\uDE7F\\uDEF0-\\uDEF6\\uDF39-\\uDF3F\\uDF99-\\uDF9C]|\\uD804[\\uDC47-\\uDC4D\\uDCBB\\uDCBC\\uDCBE-\\uDCC1\\uDD40-\\uDD43\\uDD74\\uDD75\\uDDC5-\\uDDC9\\uDDCD\\uDDDB\\uDDDD-\\uDDDF\\uDE38-\\uDE3D\\uDEA9]|\\uD805[\\uDCC6\\uDDC1-\\uDDD7\\uDE41-\\uDE43\\uDF3C-\\uDF3E]|\\uD809[\\uDC70-\\uDC74]|\\uD81A[\\uDE6E\\uDE6F\\uDEF5\\uDF37-\\uDF3B\\uDF44]|\\uD82F\\uDC9F|\\uD836[\\uDE87-\\uDE8B]/);\n\nvar reLinkTitle = new RegExp(\n    '^(?:\"(' + ESCAPED_CHAR + '|[^\"\\\\x00])*\"' +\n        '|' +\n        '\\'(' + ESCAPED_CHAR + '|[^\\'\\\\x00])*\\'' +\n        '|' +\n        '\\\\((' + ESCAPED_CHAR + '|[^()\\\\x00])*\\\\))');\n\nvar reLinkDestinationBraces = /^(?:<(?:[^<>\\n\\\\\\x00]|\\\\.)*>)/;\n\nvar reEscapable = new RegExp('^' + ESCAPABLE);\n\nvar reEntityHere = new RegExp('^' + ENTITY, 'i');\n\nvar reTicks = /`+/;\n\nvar reTicksHere = /^`+/;\n\nvar reEllipses = /\\.\\.\\./g;\n\nvar reDash = /--+/g;\n\nvar reEmailAutolink = /^<([a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)>/;\n\nvar reAutolink = /^<[A-Za-z][A-Za-z0-9.+-]{1,31}:[^<>\\x00-\\x20]*>/i;\n\nvar reSpnl = /^ *(?:\\n *)?/;\n\nvar reWhitespaceChar = /^[ \\t\\n\\x0b\\x0c\\x0d]/;\n\nvar reUnicodeWhitespaceChar = /^\\s/;\n\nvar reFinalSpace = / *$/;\n\nvar reInitialSpace = /^ */;\n\nvar reSpaceAtEndOfLine = /^ *(?:\\n|$)/;\n\nvar reLinkLabel = /^\\[(?:[^\\\\\\[\\]]|\\\\.){0,1000}\\]/;\n\n// Matches a string of non-special characters.\nvar reMain = /^[^\\n`\\[\\]\\\\!<&*_'\"]+/m;\n\nvar text = function(s) {\n    var node = new Node('text');\n    node._literal = s;\n    return node;\n};\n\n// INLINE PARSER\n\n// These are methods of an InlineParser object, defined below.\n// An InlineParser keeps track of a subject (a string to be\n// parsed) and a position in that subject.\n\n// If re matches at current position in the subject, advance\n// position in subject and return the match; otherwise return null.\nvar match = function(re) {\n    var m = re.exec(this.subject.slice(this.pos));\n    if (m === null) {\n        return null;\n    } else {\n        this.pos += m.index + m[0].length;\n        return m[0];\n    }\n};\n\n// Returns the code for the character at the current subject position, or -1\n// there are no more characters.\nvar peek = function() {\n    if (this.pos < this.subject.length) {\n        return this.subject.charCodeAt(this.pos);\n    } else {\n        return -1;\n    }\n};\n\n// Parse zero or more space characters, including at most one newline\nvar spnl = function() {\n    this.match(reSpnl);\n    return true;\n};\n\n// All of the parsers below try to match something at the current position\n// in the subject.  If they succeed in matching anything, they\n// return the inline matched, advancing the subject.\n\n// Attempt to parse backticks, adding either a backtick code span or a\n// literal sequence of backticks.\nvar parseBackticks = function(block) {\n    var ticks = this.match(reTicksHere);\n    if (ticks === null) {\n        return false;\n    }\n    var afterOpenTicks = this.pos;\n    var matched;\n    var node;\n    var contents;\n    while ((matched = this.match(reTicks)) !== null) {\n        if (matched === ticks) {\n            node = new Node('code');\n            contents = this.subject.slice(afterOpenTicks,\n                                        this.pos - ticks.length)\n                          .replace(/\\n/gm, ' ');\n            if (contents.length > 0 &&\n                contents.match(/[^ ]/) !== null &&\n                contents[0] == ' ' &&\n                contents[contents.length - 1] == ' ') {\n                node._literal = contents.slice(1, contents.length - 1);\n            } else {\n                node._literal = contents;\n            }\n            block.appendChild(node);\n            return true;\n        }\n    }\n    // If we got here, we didn't match a closing backtick sequence.\n    this.pos = afterOpenTicks;\n    block.appendChild(text(ticks));\n    return true;\n};\n\n// Parse a backslash-escaped special character, adding either the escaped\n// character, a hard line break (if the backslash is followed by a newline),\n// or a literal backslash to the block's children.  Assumes current character\n// is a backslash.\nvar parseBackslash = function(block) {\n    var subj = this.subject;\n    var node;\n    this.pos += 1;\n    if (this.peek() === C_NEWLINE) {\n        this.pos += 1;\n        node = new Node('linebreak');\n        block.appendChild(node);\n    } else if (reEscapable.test(subj.charAt(this.pos))) {\n        block.appendChild(text(subj.charAt(this.pos)));\n        this.pos += 1;\n    } else {\n        block.appendChild(text('\\\\'));\n    }\n    return true;\n};\n\n// Attempt to parse an autolink (URL or email in pointy brackets).\nvar parseAutolink = function(block) {\n    var m;\n    var dest;\n    var node;\n    if ((m = this.match(reEmailAutolink))) {\n        dest = m.slice(1, m.length - 1);\n        node = new Node('link');\n        node._destination = normalizeURI('mailto:' + dest);\n        node._title = '';\n        node.appendChild(text(dest));\n        block.appendChild(node);\n        return true;\n    } else if ((m = this.match(reAutolink))) {\n        dest = m.slice(1, m.length - 1);\n        node = new Node('link');\n        node._destination = normalizeURI(dest);\n        node._title = '';\n        node.appendChild(text(dest));\n        block.appendChild(node);\n        return true;\n    } else {\n        return false;\n    }\n};\n\n// Attempt to parse a raw HTML tag.\nvar parseHtmlTag = function(block) {\n    var m = this.match(reHtmlTag);\n    if (m === null) {\n        return false;\n    } else {\n        var node = new Node('html_inline');\n        node._literal = m;\n        block.appendChild(node);\n        return true;\n    }\n};\n\n// Scan a sequence of characters with code cc, and return information about\n// the number of delimiters and whether they are positioned such that\n// they can open and/or close emphasis or strong emphasis.  A utility\n// function for strong/emph parsing.\nvar scanDelims = function(cc) {\n    var numdelims = 0;\n    var char_before, char_after, cc_after;\n    var startpos = this.pos;\n    var left_flanking, right_flanking, can_open, can_close;\n    var after_is_whitespace, after_is_punctuation, before_is_whitespace, before_is_punctuation;\n\n    if (cc === C_SINGLEQUOTE || cc === C_DOUBLEQUOTE) {\n        numdelims++;\n        this.pos++;\n    } else {\n        while (this.peek() === cc) {\n            numdelims++;\n            this.pos++;\n        }\n    }\n\n    if (numdelims === 0) {\n        return null;\n    }\n\n    char_before = startpos === 0 ? '\\n' : this.subject.charAt(startpos - 1);\n\n    cc_after = this.peek();\n    if (cc_after === -1) {\n        char_after = '\\n';\n    } else {\n        char_after = fromCodePoint(cc_after);\n    }\n\n    after_is_whitespace = reUnicodeWhitespaceChar.test(char_after);\n    after_is_punctuation = rePunctuation.test(char_after);\n    before_is_whitespace = reUnicodeWhitespaceChar.test(char_before);\n    before_is_punctuation = rePunctuation.test(char_before);\n\n    left_flanking = !after_is_whitespace &&\n            (!after_is_punctuation || before_is_whitespace || before_is_punctuation);\n    right_flanking = !before_is_whitespace &&\n            (!before_is_punctuation || after_is_whitespace || after_is_punctuation);\n    if (cc === C_UNDERSCORE) {\n        can_open = left_flanking &&\n            (!right_flanking || before_is_punctuation);\n        can_close = right_flanking &&\n            (!left_flanking || after_is_punctuation);\n    } else if (cc === C_SINGLEQUOTE || cc === C_DOUBLEQUOTE) {\n        can_open = left_flanking && !right_flanking;\n        can_close = right_flanking;\n    } else {\n        can_open = left_flanking;\n        can_close = right_flanking;\n    }\n    this.pos = startpos;\n    return { numdelims: numdelims,\n             can_open: can_open,\n             can_close: can_close };\n};\n\n// Handle a delimiter marker for emphasis or a quote.\nvar handleDelim = function(cc, block) {\n    var res = this.scanDelims(cc);\n    if (!res) {\n        return false;\n    }\n    var numdelims = res.numdelims;\n    var startpos = this.pos;\n    var contents;\n\n    this.pos += numdelims;\n    if (cc === C_SINGLEQUOTE) {\n        contents = \"\\u2019\";\n    } else if (cc === C_DOUBLEQUOTE) {\n        contents = \"\\u201C\";\n    } else {\n        contents = this.subject.slice(startpos, this.pos);\n    }\n    var node = text(contents);\n    block.appendChild(node);\n\n    // Add entry to stack for this opener\n    if ((res.can_open || res.can_close) &&\n        (this.options.smart || cc !== C_SINGLEQUOTE || cc !== C_DOUBLEQUOTE)){\n      this.delimiters = { cc: cc,\n                          numdelims: numdelims,\n                          origdelims: numdelims,\n                          node: node,\n                          previous: this.delimiters,\n                          next: null,\n                          can_open: res.can_open,\n                          can_close: res.can_close };\n      if (this.delimiters.previous !== null) {\n        this.delimiters.previous.next = this.delimiters;\n      }\n    }\n\n    return true;\n\n};\n\nvar removeDelimiter = function(delim) {\n    if (delim.previous !== null) {\n        delim.previous.next = delim.next;\n    }\n    if (delim.next === null) {\n        // top of stack\n        this.delimiters = delim.previous;\n    } else {\n        delim.next.previous = delim.previous;\n    }\n};\n\nvar removeDelimitersBetween = function(bottom, top) {\n    if (bottom.next !== top) {\n        bottom.next = top;\n        top.previous = bottom;\n    }\n};\n\nvar processEmphasis = function(stack_bottom) {\n    var opener, closer, old_closer;\n    var opener_inl, closer_inl;\n    var tempstack;\n    var use_delims;\n    var tmp, next;\n    var opener_found;\n    var openers_bottom = [[],[],[]];\n    var odd_match = false;\n\n    for (var i=0; i < 3; i++) {\n        openers_bottom[i][C_UNDERSCORE] = stack_bottom;\n        openers_bottom[i][C_ASTERISK] = stack_bottom;\n        openers_bottom[i][C_SINGLEQUOTE] = stack_bottom;\n        openers_bottom[i][C_DOUBLEQUOTE] = stack_bottom;\n    }\n    // find first closer above stack_bottom:\n    closer = this.delimiters;\n    while (closer !== null && closer.previous !== stack_bottom) {\n        closer = closer.previous;\n    }\n    // move forward, looking for closers, and handling each\n    while (closer !== null) {\n        var closercc = closer.cc;\n        if (!closer.can_close) {\n            closer = closer.next;\n        } else {\n            // found emphasis closer. now look back for first matching opener:\n            opener = closer.previous;\n            opener_found = false;\n            while (opener !== null && opener !== stack_bottom &&\n                   opener !== openers_bottom[closer.origdelims % 3][closercc]) {\n                odd_match = (closer.can_open || opener.can_close) &&\n                     closer.origdelims % 3 !== 0 &&\n                     (opener.origdelims + closer.origdelims) % 3 === 0;\n                if (opener.cc === closer.cc && opener.can_open && !odd_match) {\n                    opener_found = true;\n                    break;\n                }\n                opener = opener.previous;\n            }\n            old_closer = closer;\n\n            if (closercc === C_ASTERISK || closercc === C_UNDERSCORE) {\n                if (!opener_found) {\n                    closer = closer.next;\n                } else {\n                    // calculate actual number of delimiters used from closer\n                    use_delims =\n                      (closer.numdelims >= 2 && opener.numdelims >= 2) ? 2 : 1;\n\n                    opener_inl = opener.node;\n                    closer_inl = closer.node;\n\n                    // remove used delimiters from stack elts and inlines\n                    opener.numdelims -= use_delims;\n                    closer.numdelims -= use_delims;\n                    opener_inl._literal =\n                        opener_inl._literal.slice(0,\n                                                  opener_inl._literal.length - use_delims);\n                    closer_inl._literal =\n                        closer_inl._literal.slice(0,\n                                                  closer_inl._literal.length - use_delims);\n\n                    // build contents for new emph element\n                    var emph = new Node(use_delims === 1 ? 'emph' : 'strong');\n\n                    tmp = opener_inl._next;\n                    while (tmp && tmp !== closer_inl) {\n                        next = tmp._next;\n                        tmp.unlink();\n                        emph.appendChild(tmp);\n                        tmp = next;\n                    }\n\n                    opener_inl.insertAfter(emph);\n\n                    // remove elts between opener and closer in delimiters stack\n                    removeDelimitersBetween(opener, closer);\n\n                    // if opener has 0 delims, remove it and the inline\n                    if (opener.numdelims === 0) {\n                        opener_inl.unlink();\n                        this.removeDelimiter(opener);\n                    }\n\n                    if (closer.numdelims === 0) {\n                        closer_inl.unlink();\n                        tempstack = closer.next;\n                        this.removeDelimiter(closer);\n                        closer = tempstack;\n                    }\n\n                }\n\n            } else if (closercc === C_SINGLEQUOTE) {\n                closer.node._literal = \"\\u2019\";\n                if (opener_found) {\n                    opener.node._literal = \"\\u2018\";\n                }\n                closer = closer.next;\n\n            } else if (closercc === C_DOUBLEQUOTE) {\n                closer.node._literal = \"\\u201D\";\n                if (opener_found) {\n                    opener.node.literal = \"\\u201C\";\n                }\n                closer = closer.next;\n\n            }\n            if (!opener_found) {\n                // Set lower bound for future searches for openers:\n                openers_bottom[old_closer.origdelims % 3][closercc] = old_closer.previous;\n                if (!old_closer.can_open) {\n                    // We can remove a closer that can't be an opener,\n                    // once we've seen there's no matching opener:\n                    this.removeDelimiter(old_closer);\n                }\n            }\n        }\n\n    }\n\n    // remove all delimiters\n    while (this.delimiters !== null && this.delimiters !== stack_bottom) {\n        this.removeDelimiter(this.delimiters);\n    }\n};\n\n// Attempt to parse link title (sans quotes), returning the string\n// or null if no match.\nvar parseLinkTitle = function() {\n    var title = this.match(reLinkTitle);\n    if (title === null) {\n        return null;\n    } else {\n        // chop off quotes from title and unescape:\n        return unescapeString(title.substr(1, title.length - 2));\n    }\n};\n\n// Attempt to parse link destination, returning the string or\n// null if no match.\nvar parseLinkDestination = function() {\n    var res = this.match(reLinkDestinationBraces);\n    if (res === null) {\n        if (this.peek() === C_LESSTHAN) {\n            return null;\n        }\n        // TODO handrolled parser; res should be null or the string\n        var savepos = this.pos;\n        var openparens = 0;\n        var c;\n        while ((c = this.peek()) !== -1) {\n            if (c === C_BACKSLASH\n                && reEscapable.test(this.subject.charAt(this.pos + 1))) {\n                this.pos += 1;\n                if (this.peek() !== -1) {\n                    this.pos += 1;\n                }\n            } else if (c === C_OPEN_PAREN) {\n                this.pos += 1;\n                openparens += 1;\n            } else if (c === C_CLOSE_PAREN) {\n                if (openparens < 1) {\n                    break;\n                } else {\n                    this.pos += 1;\n                    openparens -= 1;\n                }\n            } else if (reWhitespaceChar.exec(fromCodePoint(c)) !== null) {\n                break;\n            } else {\n                this.pos += 1;\n            }\n        }\n        if (this.pos === savepos && c !== C_CLOSE_PAREN) {\n          return null;\n        }\n        if (openparens !== 0) {\n          return null;\n        }\n        res = this.subject.substr(savepos, this.pos - savepos);\n        return normalizeURI(unescapeString(res));\n    } else {  // chop off surrounding <..>:\n        return normalizeURI(unescapeString(res.substr(1, res.length - 2)));\n    }\n};\n\n// Attempt to parse a link label, returning number of characters parsed.\nvar parseLinkLabel = function() {\n    var m = this.match(reLinkLabel);\n    if (m === null || m.length > 1001) {\n        return 0;\n    } else {\n        return m.length;\n    }\n};\n\n// Add open bracket to delimiter stack and add a text node to block's children.\nvar parseOpenBracket = function(block) {\n    var startpos = this.pos;\n    this.pos += 1;\n\n    var node = text('[');\n    block.appendChild(node);\n\n    // Add entry to stack for this opener\n    this.addBracket(node, startpos, false);\n    return true;\n};\n\n// IF next character is [, and ! delimiter to delimiter stack and\n// add a text node to block's children.  Otherwise just add a text node.\nvar parseBang = function(block) {\n    var startpos = this.pos;\n    this.pos += 1;\n    if (this.peek() === C_OPEN_BRACKET) {\n        this.pos += 1;\n\n        var node = text('![');\n        block.appendChild(node);\n\n        // Add entry to stack for this opener\n        this.addBracket(node, startpos + 1, true);\n    } else {\n        block.appendChild(text('!'));\n    }\n    return true;\n};\n\n// Try to match close bracket against an opening in the delimiter\n// stack.  Add either a link or image, or a plain [ character,\n// to block's children.  If there is a matching delimiter,\n// remove it from the delimiter stack.\nvar parseCloseBracket = function(block) {\n    var startpos;\n    var is_image;\n    var dest;\n    var title;\n    var matched = false;\n    var reflabel;\n    var opener;\n\n    this.pos += 1;\n    startpos = this.pos;\n\n    // get last [ or ![\n    opener = this.brackets;\n\n    if (opener === null) {\n        // no matched opener, just return a literal\n        block.appendChild(text(']'));\n        return true;\n    }\n\n    if (!opener.active) {\n        // no matched opener, just return a literal\n        block.appendChild(text(']'));\n        // take opener off brackets stack\n        this.removeBracket();\n        return true;\n    }\n\n    // If we got here, open is a potential opener\n    is_image = opener.image;\n\n    // Check to see if we have a link/image\n\n    var savepos = this.pos;\n\n    // Inline link?\n    if (this.peek() === C_OPEN_PAREN) {\n        this.pos++;\n        if (this.spnl() &&\n            ((dest = this.parseLinkDestination()) !== null) &&\n            this.spnl() &&\n            // make sure there's a space before the title:\n            (reWhitespaceChar.test(this.subject.charAt(this.pos - 1)) &&\n             (title = this.parseLinkTitle()) || true) &&\n            this.spnl() &&\n            this.peek() === C_CLOSE_PAREN) {\n            this.pos += 1;\n            matched = true;\n        } else {\n            this.pos = savepos;\n        }\n    }\n\n    if (!matched) {\n\n        // Next, see if there's a link label\n        var beforelabel = this.pos;\n        var n = this.parseLinkLabel();\n        if (n > 2) {\n            reflabel = this.subject.slice(beforelabel, beforelabel + n);\n        } else if (!opener.bracketAfter) {\n            // Empty or missing second label means to use the first label as the reference.\n            // The reference must not contain a bracket. If we know there's a bracket, we don't even bother checking it.\n            reflabel = this.subject.slice(opener.index, startpos);\n        }\n        if (n === 0) {\n            // If shortcut reference link, rewind before spaces we skipped.\n            this.pos = savepos;\n        }\n\n        if (reflabel) {\n            // lookup rawlabel in refmap\n            var link = this.refmap[normalizeReference(reflabel)];\n            if (link) {\n                dest = link.destination;\n                title = link.title;\n                matched = true;\n            }\n        }\n    }\n\n    if (matched) {\n        var node = new Node(is_image ? 'image' : 'link');\n        node._destination = dest;\n        node._title = title || '';\n\n        var tmp, next;\n        tmp = opener.node._next;\n        while (tmp) {\n            next = tmp._next;\n            tmp.unlink();\n            node.appendChild(tmp);\n            tmp = next;\n        }\n        block.appendChild(node);\n        this.processEmphasis(opener.previousDelimiter);\n        this.removeBracket();\n        opener.node.unlink();\n\n        // We remove this bracket and processEmphasis will remove later delimiters.\n        // Now, for a link, we also deactivate earlier link openers.\n        // (no links in links)\n        if (!is_image) {\n          opener = this.brackets;\n          while (opener !== null) {\n            if (!opener.image) {\n                opener.active = false; // deactivate this opener\n            }\n            opener = opener.previous;\n          }\n        }\n\n        return true;\n\n    } else { // no match\n\n        this.removeBracket();  // remove this opener from stack\n        this.pos = startpos;\n        block.appendChild(text(']'));\n        return true;\n    }\n\n};\n\nvar addBracket = function(node, index, image) {\n    if (this.brackets !== null) {\n        this.brackets.bracketAfter = true;\n    }\n    this.brackets = { node: node,\n                      previous: this.brackets,\n                      previousDelimiter: this.delimiters,\n                      index: index,\n                      image: image,\n                      active: true };\n};\n\nvar removeBracket = function() {\n    this.brackets = this.brackets.previous;\n};\n\n// Attempt to parse an entity.\nvar parseEntity = function(block) {\n    var m;\n    if ((m = this.match(reEntityHere))) {\n        block.appendChild(text(decodeHTML(m)));\n        return true;\n    } else {\n        return false;\n    }\n};\n\n// Parse a run of ordinary characters, or a single character with\n// a special meaning in markdown, as a plain string.\nvar parseString = function(block) {\n    var m;\n    if ((m = this.match(reMain))) {\n        if (this.options.smart) {\n            block.appendChild(text(\n                m.replace(reEllipses, \"\\u2026\")\n                    .replace(reDash, function(chars) {\n                        var enCount = 0;\n                        var emCount = 0;\n                        if (chars.length % 3 === 0) { // If divisible by 3, use all em dashes\n                            emCount = chars.length / 3;\n                        } else if (chars.length % 2 === 0) { // If divisible by 2, use all en dashes\n                            enCount = chars.length / 2;\n                        } else if (chars.length % 3 === 2) { // If 2 extra dashes, use en dash for last 2; em dashes for rest\n                            enCount = 1;\n                            emCount = (chars.length - 2) / 3;\n                        } else { // Use en dashes for last 4 hyphens; em dashes for rest\n                            enCount = 2;\n                            emCount = (chars.length - 4) / 3;\n                        }\n                        return \"\\u2014\".repeat(emCount) + \"\\u2013\".repeat(enCount);\n                    })));\n        } else {\n            block.appendChild(text(m));\n        }\n        return true;\n    } else {\n        return false;\n    }\n};\n\n// Parse a newline.  If it was preceded by two spaces, return a hard\n// line break; otherwise a soft line break.\nvar parseNewline = function(block) {\n    this.pos += 1; // assume we're at a \\n\n    // check previous node for trailing spaces\n    var lastc = block._lastChild;\n    if (lastc && lastc.type === 'text' && lastc._literal[lastc._literal.length - 1] === ' ') {\n        var hardbreak = lastc._literal[lastc._literal.length - 2] === ' ';\n        lastc._literal = lastc._literal.replace(reFinalSpace, '');\n        block.appendChild(new Node(hardbreak ? 'linebreak' : 'softbreak'));\n    } else {\n        block.appendChild(new Node('softbreak'));\n    }\n    this.match(reInitialSpace); // gobble leading spaces in next line\n    return true;\n};\n\n// Attempt to parse a link reference, modifying refmap.\nvar parseReference = function(s, refmap) {\n    this.subject = s;\n    this.pos = 0;\n    var rawlabel;\n    var dest;\n    var title;\n    var matchChars;\n    var startpos = this.pos;\n\n    // label:\n    matchChars = this.parseLinkLabel();\n    if (matchChars === 0) {\n        return 0;\n    } else {\n        rawlabel = this.subject.substr(0, matchChars);\n    }\n\n    // colon:\n    if (this.peek() === C_COLON) {\n        this.pos++;\n    } else {\n        this.pos = startpos;\n        return 0;\n    }\n\n    //  link url\n    this.spnl();\n\n    dest = this.parseLinkDestination();\n    if (dest === null) {\n        this.pos = startpos;\n        return 0;\n    }\n\n    var beforetitle = this.pos;\n    this.spnl();\n    if (this.pos !== beforetitle) {\n        title = this.parseLinkTitle();\n    }\n    if (title === null) {\n        title = '';\n        // rewind before spaces\n        this.pos = beforetitle;\n    }\n\n    // make sure we're at line end:\n    var atLineEnd = true;\n    if (this.match(reSpaceAtEndOfLine) === null) {\n        if (title === '') {\n            atLineEnd = false;\n        } else {\n            // the potential title we found is not at the line end,\n            // but it could still be a legal link reference if we\n            // discard the title\n            title = '';\n            // rewind before spaces\n            this.pos = beforetitle;\n            // and instead check if the link URL is at the line end\n            atLineEnd = this.match(reSpaceAtEndOfLine) !== null;\n        }\n    }\n\n    if (!atLineEnd) {\n        this.pos = startpos;\n        return 0;\n    }\n\n    var normlabel = normalizeReference(rawlabel);\n    if (normlabel === '') {\n        // label must contain non-whitespace characters\n        this.pos = startpos;\n        return 0;\n    }\n\n    if (!refmap[normlabel]) {\n        refmap[normlabel] = { destination: dest, title: title };\n    }\n    return this.pos - startpos;\n};\n\n// Parse the next inline element in subject, advancing subject position.\n// On success, add the result to block's children and return true.\n// On failure, return false.\nvar parseInline = function(block) {\n    var res = false;\n    var c = this.peek();\n    if (c === -1) {\n        return false;\n    }\n    switch(c) {\n    case C_NEWLINE:\n        res = this.parseNewline(block);\n        break;\n    case C_BACKSLASH:\n        res = this.parseBackslash(block);\n        break;\n    case C_BACKTICK:\n        res = this.parseBackticks(block);\n        break;\n    case C_ASTERISK:\n    case C_UNDERSCORE:\n        res = this.handleDelim(c, block);\n        break;\n    case C_SINGLEQUOTE:\n    case C_DOUBLEQUOTE:\n        res = this.options.smart && this.handleDelim(c, block);\n        break;\n    case C_OPEN_BRACKET:\n        res = this.parseOpenBracket(block);\n        break;\n    case C_BANG:\n        res = this.parseBang(block);\n        break;\n    case C_CLOSE_BRACKET:\n        res = this.parseCloseBracket(block);\n        break;\n    case C_LESSTHAN:\n        res = this.parseAutolink(block) || this.parseHtmlTag(block);\n        break;\n    case C_AMPERSAND:\n        res = this.parseEntity(block);\n        break;\n    default:\n        res = this.parseString(block);\n        break;\n    }\n    if (!res) {\n        this.pos += 1;\n        block.appendChild(text(fromCodePoint(c)));\n    }\n\n    return true;\n};\n\n// Parse string content in block into inline children,\n// using refmap to resolve references.\nvar parseInlines = function(block) {\n    this.subject = block._string_content.trim();\n    this.pos = 0;\n    this.delimiters = null;\n    this.brackets = null;\n    while (this.parseInline(block)) {\n    }\n    block._string_content = null; // allow raw string to be garbage collected\n    this.processEmphasis(null);\n};\n\n// The InlineParser object.\nfunction InlineParser(options){\n    return {\n        subject: '',\n        delimiters: null,  // used by handleDelim method\n        brackets: null,\n        pos: 0,\n        refmap: {},\n        match: match,\n        peek: peek,\n        spnl: spnl,\n        parseBackticks: parseBackticks,\n        parseBackslash: parseBackslash,\n        parseAutolink: parseAutolink,\n        parseHtmlTag: parseHtmlTag,\n        scanDelims: scanDelims,\n        handleDelim: handleDelim,\n        parseLinkTitle: parseLinkTitle,\n        parseLinkDestination: parseLinkDestination,\n        parseLinkLabel: parseLinkLabel,\n        parseOpenBracket: parseOpenBracket,\n        parseBang: parseBang,\n        parseCloseBracket: parseCloseBracket,\n        addBracket: addBracket,\n        removeBracket: removeBracket,\n        parseEntity: parseEntity,\n        parseString: parseString,\n        parseNewline: parseNewline,\n        parseReference: parseReference,\n        parseInline: parseInline,\n        processEmphasis: processEmphasis,\n        removeDelimiter: removeDelimiter,\n        options: options || {},\n        parse: parseInlines\n    };\n}\n\nmodule.exports = InlineParser;\n","\"use strict\";\n\nvar Renderer = require('./renderer');\n\nvar reUnsafeProtocol = /^javascript:|vbscript:|file:|data:/i;\nvar reSafeDataProtocol = /^data:image\\/(?:png|gif|jpeg|webp)/i;\n\nvar potentiallyUnsafe = function(url) {\n  return reUnsafeProtocol.test(url) &&\n      !reSafeDataProtocol.test(url);\n};\n\n// Helper function to produce an HTML tag.\nfunction tag(name, attrs, selfclosing) {\n  if (this.disableTags > 0) {\n    return;\n  }\n  this.buffer += ('<' + name);\n  if (attrs && attrs.length > 0) {\n    var i = 0;\n    var attrib;\n    while ((attrib = attrs[i]) !== undefined) {\n      this.buffer += (' ' + attrib[0] + '=\"' + attrib[1] + '\"');\n      i++;\n    }\n  }\n  if (selfclosing) {\n    this.buffer += ' /';\n  }\n  this.buffer += '>';\n  this.lastOut = '>';\n}\n\nfunction HtmlRenderer(options) {\n  options = options || {};\n  // by default, soft breaks are rendered as newlines in HTML\n  options.softbreak = options.softbreak || '\\n';\n  // set to \"<br />\" to make them hard breaks\n  // set to \" \" if you want to ignore line wrapping in source\n\n  this.disableTags = 0;\n  this.lastOut = \"\\n\";\n  this.options = options;\n}\n\n/* Node methods */\n\nfunction text(node) {\n  this.out(node.literal);\n}\n\nfunction softbreak() {\n  this.lit(this.options.softbreak);\n}\n\nfunction linebreak() {\n  this.tag('br', [], true);\n  this.cr();\n}\n\nfunction link(node, entering) {\n  var attrs = this.attrs(node);\n  if (entering) {\n    if (!(this.options.safe && potentiallyUnsafe(node.destination))) {\n      attrs.push(['href', this.esc(node.destination)]);\n    }\n    if (node.title) {\n      attrs.push(['title', this.esc(node.title)]);\n    }\n    this.tag('a', attrs);\n  } else {\n    this.tag('/a');\n  }\n}\n\nfunction image(node, entering) {\n  if (entering) {\n    if (this.disableTags === 0) {\n      if (this.options.safe && potentiallyUnsafe(node.destination)) {\n        this.lit('<img src=\"\" alt=\"');\n      } else {\n        this.lit('<img src=\"' + this.esc(node.destination) +\n            '\" alt=\"');\n      }\n    }\n    this.disableTags += 1;\n  } else {\n    this.disableTags -= 1;\n    if (this.disableTags === 0) {\n      if (node.title) {\n        this.lit('\" title=\"' + this.esc(node.title));\n      }\n      this.lit('\" />');\n    }\n  }\n}\n\nfunction emph(node, entering) {\n  this.tag(entering ? 'em' : '/em');\n}\n\nfunction strong(node, entering) {\n  this.tag(entering ? 'strong' : '/strong');\n}\n\nfunction paragraph(node, entering) {\n  var grandparent = node.parent.parent\n    , attrs = this.attrs(node);\n  if (grandparent !== null &&\n    grandparent.type === 'list') {\n    if (grandparent.listTight) {\n      return;\n    }\n  }\n  if (entering) {\n    this.cr();\n    this.tag('p', attrs);\n  } else {\n    this.tag('/p');\n    this.cr();\n  }\n}\n\nfunction heading(node, entering) {\n  var tagname = 'h' + node.level\n    , attrs = this.attrs(node);\n  if (entering) {\n    this.cr();\n    this.tag(tagname, attrs);\n  } else {\n    this.tag('/' + tagname);\n    this.cr();\n  }\n}\n\nfunction code(node) {\n  this.tag('code');\n  this.out(node.literal);\n  this.tag('/code');\n}\n\nfunction code_block(node) {\n  var info_words = node.info ? node.info.split(/\\s+/) : []\n    , attrs = this.attrs(node);\n  if (info_words.length > 0 && info_words[0].length > 0) {\n    attrs.push(['class', 'language-' + this.esc(info_words[0])]);\n  }\n  this.cr();\n  this.tag('pre');\n  this.tag('code', attrs);\n  this.out(node.literal);\n  this.tag('/code');\n  this.tag('/pre');\n  this.cr();\n}\n\nfunction thematic_break(node) {\n  var attrs = this.attrs(node);\n  this.cr();\n  this.tag('hr', attrs, true);\n  this.cr();\n}\n\nfunction block_quote(node, entering) {\n  var attrs = this.attrs(node);\n  if (entering) {\n    this.cr();\n    this.tag('blockquote', attrs);\n    this.cr();\n  } else {\n    this.cr();\n    this.tag('/blockquote');\n    this.cr();\n  }\n}\n\nfunction list(node, entering) {\n  var tagname = node.listType === 'bullet' ? 'ul' : 'ol'\n    , attrs = this.attrs(node);\n\n  if (entering) {\n    var start = node.listStart;\n    if (start !== null && start !== 1) {\n      attrs.push(['start', start.toString()]);\n    }\n    this.cr();\n    this.tag(tagname, attrs);\n    this.cr();\n  } else {\n    this.cr();\n    this.tag('/' + tagname);\n    this.cr();\n  }\n}\n\nfunction item(node, entering) {\n  var attrs = this.attrs(node);\n  if (entering) {\n    this.tag('li', attrs);\n  } else {\n    this.tag('/li');\n    this.cr();\n  }\n}\n\nfunction html_inline(node) {\n  if (this.options.safe) {\n    this.lit('<!-- raw HTML omitted -->');\n  } else {\n    this.lit(node.literal);\n  }\n}\n\nfunction html_block(node) {\n  this.cr();\n  if (this.options.safe) {\n    this.lit('<!-- raw HTML omitted -->');\n  } else {\n    this.lit(node.literal);\n  }\n  this.cr();\n}\n\nfunction custom_inline(node, entering) {\n  if (entering && node.onEnter) {\n    this.lit(node.onEnter);\n  } else if (!entering && node.onExit) {\n    this.lit(node.onExit);\n  }\n}\n\nfunction custom_block(node, entering) {\n  this.cr();\n  if (entering && node.onEnter) {\n    this.lit(node.onEnter);\n  } else if (!entering && node.onExit) {\n    this.lit(node.onExit);\n  }\n  this.cr();\n}\n\n/* Helper methods */\n\nfunction out(s) {\n  this.lit(this.esc(s));\n}\n\nfunction attrs (node) {\n  var att = [];\n  if (this.options.sourcepos) {\n    var pos = node.sourcepos;\n    if (pos) {\n      att.push(['data-sourcepos', String(pos[0][0]) + ':' +\n        String(pos[0][1]) + '-' + String(pos[1][0]) + ':' +\n        String(pos[1][1])]);\n    }\n  }\n  return att;\n}\n\n// quick browser-compatible inheritance\nHtmlRenderer.prototype = Object.create(Renderer.prototype);\n\nHtmlRenderer.prototype.text = text;\nHtmlRenderer.prototype.html_inline = html_inline;\nHtmlRenderer.prototype.html_block = html_block;\nHtmlRenderer.prototype.softbreak = softbreak;\nHtmlRenderer.prototype.linebreak = linebreak;\nHtmlRenderer.prototype.link = link;\nHtmlRenderer.prototype.image = image;\nHtmlRenderer.prototype.emph = emph;\nHtmlRenderer.prototype.strong = strong;\nHtmlRenderer.prototype.paragraph = paragraph;\nHtmlRenderer.prototype.heading = heading;\nHtmlRenderer.prototype.code = code;\nHtmlRenderer.prototype.code_block = code_block;\nHtmlRenderer.prototype.thematic_break = thematic_break;\nHtmlRenderer.prototype.block_quote = block_quote;\nHtmlRenderer.prototype.list = list;\nHtmlRenderer.prototype.item = item;\nHtmlRenderer.prototype.custom_inline = custom_inline;\nHtmlRenderer.prototype.custom_block = custom_block;\n\nHtmlRenderer.prototype.esc = require('../common').escapeXml;\n\nHtmlRenderer.prototype.out = out;\nHtmlRenderer.prototype.tag = tag;\nHtmlRenderer.prototype.attrs = attrs;\n\nmodule.exports = HtmlRenderer;\n","\"use strict\";\n\n// derived from https://github.com/mathiasbynens/String.fromCodePoint\n/*! http://mths.be/fromcodepoint v0.2.1 by @mathias */\nif (String.fromCodePoint) {\n    module.exports = function (_) {\n        try {\n            return String.fromCodePoint(_);\n        } catch (e) {\n            if (e instanceof RangeError) {\n                return String.fromCharCode(0xFFFD);\n            }\n            throw e;\n        }\n    };\n\n} else {\n\n  var stringFromCharCode = String.fromCharCode;\n  var floor = Math.floor;\n  var fromCodePoint = function() {\n      var MAX_SIZE = 0x4000;\n      var codeUnits = [];\n      var highSurrogate;\n      var lowSurrogate;\n      var index = -1;\n      var length = arguments.length;\n      if (!length) {\n          return '';\n      }\n      var result = '';\n      while (++index < length) {\n          var codePoint = Number(arguments[index]);\n          if (\n              !isFinite(codePoint) || // `NaN`, `+Infinity`, or `-Infinity`\n                  codePoint < 0 || // not a valid Unicode code point\n                  codePoint > 0x10FFFF || // not a valid Unicode code point\n                  floor(codePoint) !== codePoint // not an integer\n          ) {\n              return String.fromCharCode(0xFFFD);\n          }\n          if (codePoint <= 0xFFFF) { // BMP code point\n              codeUnits.push(codePoint);\n          } else { // Astral code point; split in surrogate halves\n              // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n              codePoint -= 0x10000;\n              highSurrogate = (codePoint >> 10) + 0xD800;\n              lowSurrogate = (codePoint % 0x400) + 0xDC00;\n              codeUnits.push(highSurrogate, lowSurrogate);\n          }\n          if (index + 1 === length || codeUnits.length > MAX_SIZE) {\n              result += stringFromCharCode.apply(null, codeUnits);\n              codeUnits.length = 0;\n          }\n      }\n      return result;\n  };\n  module.exports = fromCodePoint;\n}\n","\n'use strict';\n\n\nvar encodeCache = {};\n\n\n// Create a lookup array where anything but characters in `chars` string\n// and alphanumeric chars is percent-encoded.\n//\nfunction getEncodeCache(exclude) {\n  var i, ch, cache = encodeCache[exclude];\n  if (cache) { return cache; }\n\n  cache = encodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n\n    if (/^[0-9a-z]$/i.test(ch)) {\n      // always allow unencoded alphanumeric characters\n      cache.push(ch);\n    } else {\n      cache.push('%' + ('0' + i.toString(16).toUpperCase()).slice(-2));\n    }\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    cache[exclude.charCodeAt(i)] = exclude[i];\n  }\n\n  return cache;\n}\n\n\n// Encode unsafe characters with percent-encoding, skipping already\n// encoded sequences.\n//\n//  - string       - string to encode\n//  - exclude      - list of characters to ignore (in addition to a-zA-Z0-9)\n//  - keepEscaped  - don't encode '%' in a correct escape sequence (default: true)\n//\nfunction encode(string, exclude, keepEscaped) {\n  var i, l, code, nextCode, cache,\n      result = '';\n\n  if (typeof exclude !== 'string') {\n    // encode(string, keepEscaped)\n    keepEscaped  = exclude;\n    exclude = encode.defaultChars;\n  }\n\n  if (typeof keepEscaped === 'undefined') {\n    keepEscaped = true;\n  }\n\n  cache = getEncodeCache(exclude);\n\n  for (i = 0, l = string.length; i < l; i++) {\n    code = string.charCodeAt(i);\n\n    if (keepEscaped && code === 0x25 /* % */ && i + 2 < l) {\n      if (/^[0-9a-f]{2}$/i.test(string.slice(i + 1, i + 3))) {\n        result += string.slice(i, i + 3);\n        i += 2;\n        continue;\n      }\n    }\n\n    if (code < 128) {\n      result += cache[code];\n      continue;\n    }\n\n    if (code >= 0xD800 && code <= 0xDFFF) {\n      if (code >= 0xD800 && code <= 0xDBFF && i + 1 < l) {\n        nextCode = string.charCodeAt(i + 1);\n        if (nextCode >= 0xDC00 && nextCode <= 0xDFFF) {\n          result += encodeURIComponent(string[i] + string[i + 1]);\n          i++;\n          continue;\n        }\n      }\n      result += '%EF%BF%BD';\n      continue;\n    }\n\n    result += encodeURIComponent(string[i]);\n  }\n\n  return result;\n}\n\nencode.defaultChars   = \";/?:@&=+$,-_.!~*'()#\";\nencode.componentChars = \"-_.!~*'()\";\n\n\nmodule.exports = encode;\n","\"use strict\";\n\nfunction Renderer() {}\n\n/**\n *  Walks the AST and calls member methods for each Node type.\n *\n *  @param ast {Node} The root of the abstract syntax tree.\n */\nfunction render(ast) {\n  var walker = ast.walker()\n    , event\n    , type;\n\n  this.buffer = '';\n  this.lastOut = '\\n';\n\n  while((event = walker.next())) {\n    type = event.node.type;\n    if (this[type]) {\n      this[type](event.node, event.entering);\n    }\n  }\n  return this.buffer;\n}\n\n/**\n *  Concatenate a literal string to the buffer.\n *\n *  @param str {String} The string to concatenate.\n */\nfunction lit(str) {\n  this.buffer += str;\n  this.lastOut = str;\n}\n\n/**\n *  Output a newline to the buffer.\n */\nfunction cr() {\n  if (this.lastOut !== '\\n') {\n    this.lit('\\n');\n  }\n}\n\n/**\n *  Concatenate a string to the buffer possibly escaping the content.\n *\n *  Concrete renderer implementations should override this method.\n *\n *  @param str {String} The string to concatenate.\n */\nfunction out(str) {\n  this.lit(str);\n}\n\n/**\n *  Escape a string for the target renderer.\n *\n *  Abstract function that should be implemented by concrete \n *  renderer implementations.\n *\n *  @param str {String} The string to escape.\n */\nfunction esc(str) {\n  return str;\n}\n\nRenderer.prototype.render = render;\nRenderer.prototype.out = out;\nRenderer.prototype.lit = lit;\nRenderer.prototype.cr  = cr;\nRenderer.prototype.esc  = esc;\n\nmodule.exports = Renderer;\n","\"use strict\";\n\nvar Renderer = require('./renderer');\n\nvar reXMLTag = /\\<[^>]*\\>/;\n\nfunction toTagName(s) {\n  return s.replace(/([a-z])([A-Z])/g, \"$1_$2\").toLowerCase();\n}\n\nfunction XmlRenderer(options) {\n  options = options || {};\n\n  this.disableTags = 0;\n  this.lastOut = \"\\n\";\n\n  this.indentLevel = 0;\n  this.indent = '  ';\n\n  this.options = options;\n}\n\nfunction render(ast) {\n\n  this.buffer = '';\n\n  var attrs;\n  var tagname;\n  var walker = ast.walker();\n  var event, node, entering;\n  var container;\n  var selfClosing;\n  var nodetype;\n\n  var options = this.options;\n\n  if (options.time) { console.time(\"rendering\"); }\n\n  this.buffer += '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n';\n  this.buffer += '<!DOCTYPE document SYSTEM \"CommonMark.dtd\">\\n';\n\n  while ((event = walker.next())) {\n    entering = event.entering;\n    node = event.node;\n    nodetype = node.type;\n\n    container = node.isContainer;\n\n    selfClosing = nodetype === 'thematic_break'\n      || nodetype === 'linebreak'\n      || nodetype === 'softbreak';\n\n    tagname = toTagName(nodetype);\n\n    if (entering) {\n\n        attrs = [];\n\n        switch (nodetype) {\n          case 'document':\n            attrs.push(['xmlns', 'http://commonmark.org/xml/1.0']);\n            break;\n          case 'list':\n            if (node.listType !== null) {\n              attrs.push(['type', node.listType.toLowerCase()]);\n            }\n            if (node.listStart !== null) {\n              attrs.push(['start', String(node.listStart)]);\n            }\n            if (node.listTight !== null) {\n              attrs.push(['tight', (node.listTight ? 'true' : 'false')]);\n            }\n            var delim = node.listDelimiter;\n            if (delim !== null) {\n              var delimword = '';\n              if (delim === '.') {\n                delimword = 'period';\n              } else {\n                delimword = 'paren';\n              }\n              attrs.push(['delimiter', delimword]);\n            }\n            break;\n          case 'code_block':\n            if (node.info) {\n              attrs.push(['info', node.info]);\n            }\n            break;\n          case 'heading':\n            attrs.push(['level', String(node.level)]);\n            break;\n          case 'link':\n          case 'image':\n            attrs.push(['destination', node.destination]);\n            attrs.push(['title', node.title]);\n            break;\n          case 'custom_inline':\n          case 'custom_block':\n            attrs.push(['on_enter', node.onEnter]);\n            attrs.push(['on_exit', node.onExit]);\n            break;\n          default:\n            break;\n        }\n        if (options.sourcepos) {\n          var pos = node.sourcepos;\n          if (pos) {\n            attrs.push(['sourcepos', String(pos[0][0]) + ':' +\n              String(pos[0][1]) + '-' + String(pos[1][0]) + ':' +\n              String(pos[1][1])]);\n          }\n        }\n\n        this.cr();\n        this.out(this.tag(tagname, attrs, selfClosing));\n        if (container) {\n          this.indentLevel += 1;\n        } else if (!container && !selfClosing) {\n          var lit = node.literal;\n          if (lit) {\n            this.out(this.esc(lit));\n          }\n          this.out(this.tag('/' + tagname));\n        }\n    } else {\n      this.indentLevel -= 1;\n      this.cr();\n      this.out(this.tag('/' + tagname));\n    }\n  }\n  if (options.time) { console.timeEnd(\"rendering\"); }\n  this.buffer += '\\n';\n  return this.buffer;\n}\n\nfunction out(s) {\n  if(this.disableTags > 0) {\n    this.buffer += s.replace(reXMLTag, '');\n  }else{\n    this.buffer += s;\n  }\n  this.lastOut = s;\n}\n\nfunction cr() {\n  if(this.lastOut !== '\\n') {\n    this.buffer += '\\n';\n    this.lastOut = '\\n';\n    for(var i = this.indentLevel; i > 0; i--) {\n      this.buffer += this.indent;\n    }\n  }\n}\n\n// Helper function to produce an XML tag.\nfunction tag(name, attrs, selfclosing) {\n  var result = '<' + name;\n  if(attrs && attrs.length > 0) {\n    var i = 0;\n    var attrib;\n    while ((attrib = attrs[i]) !== undefined) {\n      result += ' ' + attrib[0] + '=\"' + this.esc(attrib[1]) + '\"';\n      i++;\n    }\n  }\n  if(selfclosing) {\n    result += ' /';\n  }\n  result += '>';\n  return result;\n}\n\n// quick browser-compatible inheritance\nXmlRenderer.prototype = Object.create(Renderer.prototype);\n\nXmlRenderer.prototype.render = render;\nXmlRenderer.prototype.out = out;\nXmlRenderer.prototype.cr = cr;\nXmlRenderer.prototype.tag = tag;\nXmlRenderer.prototype.esc = require('../common').escapeXml;\n\nmodule.exports = XmlRenderer;\n","\"use strict\";\n\n// commonmark.js - CommomMark in JavaScript\n// Copyright (C) 2014 John MacFarlane\n// License: BSD3.\n\n// Basic usage:\n//\n// var commonmark = require('commonmark');\n// var parser = new commonmark.Parser();\n// var renderer = new commonmark.HtmlRenderer();\n// console.log(renderer.render(parser.parse('Hello *world*')));\n\nmodule.exports.Node = require('./node');\nmodule.exports.Parser = require('./blocks');\nmodule.exports.Renderer = require('./render/renderer');\nmodule.exports.HtmlRenderer = require('./render/html');\nmodule.exports.XmlRenderer = require('./render/xml');\n","/*! http://mths.be/repeat v0.2.0 by @mathias */\nif (!String.prototype.repeat) {\n\t(function() {\n\t\t'use strict'; // needed to support `apply`/`call` with `undefined`/`null`\n\t\tvar defineProperty = (function() {\n\t\t\t// IE 8 only supports `Object.defineProperty` on DOM elements\n\t\t\ttry {\n\t\t\t\tvar object = {};\n\t\t\t\tvar $defineProperty = Object.defineProperty;\n\t\t\t\tvar result = $defineProperty(object, object, object) && $defineProperty;\n\t\t\t} catch(error) {}\n\t\t\treturn result;\n\t\t}());\n\t\tvar repeat = function(count) {\n\t\t\tif (this == null) {\n\t\t\t\tthrow TypeError();\n\t\t\t}\n\t\t\tvar string = String(this);\n\t\t\t// `ToInteger`\n\t\t\tvar n = count ? Number(count) : 0;\n\t\t\tif (n != n) { // better `isNaN`\n\t\t\t\tn = 0;\n\t\t\t}\n\t\t\t// Account for out-of-bounds indices\n\t\t\tif (n < 0 || n == Infinity) {\n\t\t\t\tthrow RangeError();\n\t\t\t}\n\t\t\tvar result = '';\n\t\t\twhile (n) {\n\t\t\t\tif (n % 2 == 1) {\n\t\t\t\t\tresult += string;\n\t\t\t\t}\n\t\t\t\tif (n > 1) {\n\t\t\t\t\tstring += string;\n\t\t\t\t}\n\t\t\t\tn >>= 1;\n\t\t\t}\n\t\t\treturn result;\n\t\t};\n\t\tif (defineProperty) {\n\t\t\tdefineProperty(String.prototype, 'repeat', {\n\t\t\t\t'value': repeat,\n\t\t\t\t'configurable': true,\n\t\t\t\t'writable': true\n\t\t\t});\n\t\t} else {\n\t\t\tString.prototype.repeat = repeat;\n\t\t}\n\t}());\n}\n","\"use strict\";\n\nvar encode = require('mdurl/encode');\n\nvar C_BACKSLASH = 92;\n\nvar decodeHTML = require('entities').decodeHTML;\n\nvar ENTITY = \"&(?:#x[a-f0-9]{1,6}|#[0-9]{1,7}|[a-z][a-z0-9]{1,31});\";\n\nvar TAGNAME = '[A-Za-z][A-Za-z0-9-]*';\nvar ATTRIBUTENAME = '[a-zA-Z_:][a-zA-Z0-9:._-]*';\nvar UNQUOTEDVALUE = \"[^\\\"'=<>`\\\\x00-\\\\x20]+\";\nvar SINGLEQUOTEDVALUE = \"'[^']*'\";\nvar DOUBLEQUOTEDVALUE = '\"[^\"]*\"';\nvar ATTRIBUTEVALUE = \"(?:\" + UNQUOTEDVALUE + \"|\" + SINGLEQUOTEDVALUE + \"|\" + DOUBLEQUOTEDVALUE + \")\";\nvar ATTRIBUTEVALUESPEC = \"(?:\" + \"\\\\s*=\" + \"\\\\s*\" + ATTRIBUTEVALUE + \")\";\nvar ATTRIBUTE = \"(?:\" + \"\\\\s+\" + ATTRIBUTENAME + ATTRIBUTEVALUESPEC + \"?)\";\nvar OPENTAG = \"<\" + TAGNAME + ATTRIBUTE + \"*\" + \"\\\\s*/?>\";\nvar CLOSETAG = \"</\" + TAGNAME + \"\\\\s*[>]\";\nvar HTMLCOMMENT = \"<!---->|<!--(?:-?[^>-])(?:-?[^-])*-->\";\nvar PROCESSINGINSTRUCTION = \"[<][?].*?[?][>]\";\nvar DECLARATION = \"<![A-Z]+\" + \"\\\\s+[^>]*>\";\nvar CDATA = \"<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>\";\nvar HTMLTAG = \"(?:\" + OPENTAG + \"|\" + CLOSETAG + \"|\" + HTMLCOMMENT + \"|\" +\n        PROCESSINGINSTRUCTION + \"|\" + DECLARATION + \"|\" + CDATA + \")\";\nvar reHtmlTag = new RegExp('^' + HTMLTAG, 'i');\n\nvar reBackslashOrAmp = /[\\\\&]/;\n\nvar ESCAPABLE = '[!\"#$%&\\'()*+,./:;<=>?@[\\\\\\\\\\\\]^_`{|}~-]';\n\nvar reEntityOrEscapedChar = new RegExp('\\\\\\\\' + ESCAPABLE + '|' + ENTITY, 'gi');\n\nvar XMLSPECIAL = '[&<>\"]';\n\nvar reXmlSpecial = new RegExp(XMLSPECIAL, 'g');\n\nvar unescapeChar = function(s) {\n    if (s.charCodeAt(0) === C_BACKSLASH) {\n        return s.charAt(1);\n    } else {\n        return decodeHTML(s);\n    }\n};\n\n// Replace entities and backslash escapes with literal characters.\nvar unescapeString = function(s) {\n    if (reBackslashOrAmp.test(s)) {\n        return s.replace(reEntityOrEscapedChar, unescapeChar);\n    } else {\n        return s;\n    }\n};\n\nvar normalizeURI = function(uri) {\n    try {\n        return encode(uri);\n    }\n    catch(err) {\n        return uri;\n    }\n};\n\nvar replaceUnsafeChar = function(s) {\n    switch (s) {\n    case '&':\n        return '&amp;';\n    case '<':\n        return '&lt;';\n    case '>':\n        return '&gt;';\n    case '\"':\n        return '&quot;';\n    default:\n        return s;\n    }\n};\n\nvar escapeXml = function(s) {\n    if (reXmlSpecial.test(s)) {\n        return s.replace(reXmlSpecial, replaceUnsafeChar);\n    } else {\n        return s;\n    }\n};\n\nmodule.exports = { unescapeString: unescapeString,\n                   normalizeURI: normalizeURI,\n                   escapeXml: escapeXml,\n                   reHtmlTag: reHtmlTag,\n                   OPENTAG: OPENTAG,\n                   CLOSETAG: CLOSETAG,\n                   ENTITY: ENTITY,\n                   ESCAPABLE: ESCAPABLE\n                 };\n","\"use strict\";\n\n/* The bulk of this code derives from https://github.com/dmoscrop/fold-case\nBut in addition to case-folding, we also normalize whitespace.\n\nfold-case is Copyright Mathias Bynens <https://mathiasbynens.be/>\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/*eslint-disable  key-spacing, comma-spacing */\n\nvar regex = /[ \\t\\r\\n]+|[A-Z\\xB5\\xC0-\\xD6\\xD8-\\xDF\\u0100\\u0102\\u0104\\u0106\\u0108\\u010A\\u010C\\u010E\\u0110\\u0112\\u0114\\u0116\\u0118\\u011A\\u011C\\u011E\\u0120\\u0122\\u0124\\u0126\\u0128\\u012A\\u012C\\u012E\\u0130\\u0132\\u0134\\u0136\\u0139\\u013B\\u013D\\u013F\\u0141\\u0143\\u0145\\u0147\\u0149\\u014A\\u014C\\u014E\\u0150\\u0152\\u0154\\u0156\\u0158\\u015A\\u015C\\u015E\\u0160\\u0162\\u0164\\u0166\\u0168\\u016A\\u016C\\u016E\\u0170\\u0172\\u0174\\u0176\\u0178\\u0179\\u017B\\u017D\\u017F\\u0181\\u0182\\u0184\\u0186\\u0187\\u0189-\\u018B\\u018E-\\u0191\\u0193\\u0194\\u0196-\\u0198\\u019C\\u019D\\u019F\\u01A0\\u01A2\\u01A4\\u01A6\\u01A7\\u01A9\\u01AC\\u01AE\\u01AF\\u01B1-\\u01B3\\u01B5\\u01B7\\u01B8\\u01BC\\u01C4\\u01C5\\u01C7\\u01C8\\u01CA\\u01CB\\u01CD\\u01CF\\u01D1\\u01D3\\u01D5\\u01D7\\u01D9\\u01DB\\u01DE\\u01E0\\u01E2\\u01E4\\u01E6\\u01E8\\u01EA\\u01EC\\u01EE\\u01F0-\\u01F2\\u01F4\\u01F6-\\u01F8\\u01FA\\u01FC\\u01FE\\u0200\\u0202\\u0204\\u0206\\u0208\\u020A\\u020C\\u020E\\u0210\\u0212\\u0214\\u0216\\u0218\\u021A\\u021C\\u021E\\u0220\\u0222\\u0224\\u0226\\u0228\\u022A\\u022C\\u022E\\u0230\\u0232\\u023A\\u023B\\u023D\\u023E\\u0241\\u0243-\\u0246\\u0248\\u024A\\u024C\\u024E\\u0345\\u0370\\u0372\\u0376\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03AB\\u03B0\\u03C2\\u03CF-\\u03D1\\u03D5\\u03D6\\u03D8\\u03DA\\u03DC\\u03DE\\u03E0\\u03E2\\u03E4\\u03E6\\u03E8\\u03EA\\u03EC\\u03EE\\u03F0\\u03F1\\u03F4\\u03F5\\u03F7\\u03F9\\u03FA\\u03FD-\\u042F\\u0460\\u0462\\u0464\\u0466\\u0468\\u046A\\u046C\\u046E\\u0470\\u0472\\u0474\\u0476\\u0478\\u047A\\u047C\\u047E\\u0480\\u048A\\u048C\\u048E\\u0490\\u0492\\u0494\\u0496\\u0498\\u049A\\u049C\\u049E\\u04A0\\u04A2\\u04A4\\u04A6\\u04A8\\u04AA\\u04AC\\u04AE\\u04B0\\u04B2\\u04B4\\u04B6\\u04B8\\u04BA\\u04BC\\u04BE\\u04C0\\u04C1\\u04C3\\u04C5\\u04C7\\u04C9\\u04CB\\u04CD\\u04D0\\u04D2\\u04D4\\u04D6\\u04D8\\u04DA\\u04DC\\u04DE\\u04E0\\u04E2\\u04E4\\u04E6\\u04E8\\u04EA\\u04EC\\u04EE\\u04F0\\u04F2\\u04F4\\u04F6\\u04F8\\u04FA\\u04FC\\u04FE\\u0500\\u0502\\u0504\\u0506\\u0508\\u050A\\u050C\\u050E\\u0510\\u0512\\u0514\\u0516\\u0518\\u051A\\u051C\\u051E\\u0520\\u0522\\u0524\\u0526\\u0528\\u052A\\u052C\\u052E\\u0531-\\u0556\\u0587\\u10A0-\\u10C5\\u10C7\\u10CD\\u1E00\\u1E02\\u1E04\\u1E06\\u1E08\\u1E0A\\u1E0C\\u1E0E\\u1E10\\u1E12\\u1E14\\u1E16\\u1E18\\u1E1A\\u1E1C\\u1E1E\\u1E20\\u1E22\\u1E24\\u1E26\\u1E28\\u1E2A\\u1E2C\\u1E2E\\u1E30\\u1E32\\u1E34\\u1E36\\u1E38\\u1E3A\\u1E3C\\u1E3E\\u1E40\\u1E42\\u1E44\\u1E46\\u1E48\\u1E4A\\u1E4C\\u1E4E\\u1E50\\u1E52\\u1E54\\u1E56\\u1E58\\u1E5A\\u1E5C\\u1E5E\\u1E60\\u1E62\\u1E64\\u1E66\\u1E68\\u1E6A\\u1E6C\\u1E6E\\u1E70\\u1E72\\u1E74\\u1E76\\u1E78\\u1E7A\\u1E7C\\u1E7E\\u1E80\\u1E82\\u1E84\\u1E86\\u1E88\\u1E8A\\u1E8C\\u1E8E\\u1E90\\u1E92\\u1E94\\u1E96-\\u1E9B\\u1E9E\\u1EA0\\u1EA2\\u1EA4\\u1EA6\\u1EA8\\u1EAA\\u1EAC\\u1EAE\\u1EB0\\u1EB2\\u1EB4\\u1EB6\\u1EB8\\u1EBA\\u1EBC\\u1EBE\\u1EC0\\u1EC2\\u1EC4\\u1EC6\\u1EC8\\u1ECA\\u1ECC\\u1ECE\\u1ED0\\u1ED2\\u1ED4\\u1ED6\\u1ED8\\u1EDA\\u1EDC\\u1EDE\\u1EE0\\u1EE2\\u1EE4\\u1EE6\\u1EE8\\u1EEA\\u1EEC\\u1EEE\\u1EF0\\u1EF2\\u1EF4\\u1EF6\\u1EF8\\u1EFA\\u1EFC\\u1EFE\\u1F08-\\u1F0F\\u1F18-\\u1F1D\\u1F28-\\u1F2F\\u1F38-\\u1F3F\\u1F48-\\u1F4D\\u1F50\\u1F52\\u1F54\\u1F56\\u1F59\\u1F5B\\u1F5D\\u1F5F\\u1F68-\\u1F6F\\u1F80-\\u1FAF\\u1FB2-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD2\\u1FD3\\u1FD6-\\u1FDB\\u1FE2-\\u1FE4\\u1FE6-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2126\\u212A\\u212B\\u2132\\u2160-\\u216F\\u2183\\u24B6-\\u24CF\\u2C00-\\u2C2E\\u2C60\\u2C62-\\u2C64\\u2C67\\u2C69\\u2C6B\\u2C6D-\\u2C70\\u2C72\\u2C75\\u2C7E-\\u2C80\\u2C82\\u2C84\\u2C86\\u2C88\\u2C8A\\u2C8C\\u2C8E\\u2C90\\u2C92\\u2C94\\u2C96\\u2C98\\u2C9A\\u2C9C\\u2C9E\\u2CA0\\u2CA2\\u2CA4\\u2CA6\\u2CA8\\u2CAA\\u2CAC\\u2CAE\\u2CB0\\u2CB2\\u2CB4\\u2CB6\\u2CB8\\u2CBA\\u2CBC\\u2CBE\\u2CC0\\u2CC2\\u2CC4\\u2CC6\\u2CC8\\u2CCA\\u2CCC\\u2CCE\\u2CD0\\u2CD2\\u2CD4\\u2CD6\\u2CD8\\u2CDA\\u2CDC\\u2CDE\\u2CE0\\u2CE2\\u2CEB\\u2CED\\u2CF2\\uA640\\uA642\\uA644\\uA646\\uA648\\uA64A\\uA64C\\uA64E\\uA650\\uA652\\uA654\\uA656\\uA658\\uA65A\\uA65C\\uA65E\\uA660\\uA662\\uA664\\uA666\\uA668\\uA66A\\uA66C\\uA680\\uA682\\uA684\\uA686\\uA688\\uA68A\\uA68C\\uA68E\\uA690\\uA692\\uA694\\uA696\\uA698\\uA69A\\uA722\\uA724\\uA726\\uA728\\uA72A\\uA72C\\uA72E\\uA732\\uA734\\uA736\\uA738\\uA73A\\uA73C\\uA73E\\uA740\\uA742\\uA744\\uA746\\uA748\\uA74A\\uA74C\\uA74E\\uA750\\uA752\\uA754\\uA756\\uA758\\uA75A\\uA75C\\uA75E\\uA760\\uA762\\uA764\\uA766\\uA768\\uA76A\\uA76C\\uA76E\\uA779\\uA77B\\uA77D\\uA77E\\uA780\\uA782\\uA784\\uA786\\uA78B\\uA78D\\uA790\\uA792\\uA796\\uA798\\uA79A\\uA79C\\uA79E\\uA7A0\\uA7A2\\uA7A4\\uA7A6\\uA7A8\\uA7AA-\\uA7AD\\uA7B0\\uA7B1\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFF21-\\uFF3A]|\\uD801[\\uDC00-\\uDC27]|\\uD806[\\uDCA0-\\uDCBF]/g;\n\nvar map = {'A':'a','B':'b','C':'c','D':'d','E':'e','F':'f','G':'g','H':'h','I':'i','J':'j','K':'k','L':'l','M':'m','N':'n','O':'o','P':'p','Q':'q','R':'r','S':'s','T':'t','U':'u','V':'v','W':'w','X':'x','Y':'y','Z':'z','\\xB5':'\\u03BC','\\xC0':'\\xE0','\\xC1':'\\xE1','\\xC2':'\\xE2','\\xC3':'\\xE3','\\xC4':'\\xE4','\\xC5':'\\xE5','\\xC6':'\\xE6','\\xC7':'\\xE7','\\xC8':'\\xE8','\\xC9':'\\xE9','\\xCA':'\\xEA','\\xCB':'\\xEB','\\xCC':'\\xEC','\\xCD':'\\xED','\\xCE':'\\xEE','\\xCF':'\\xEF','\\xD0':'\\xF0','\\xD1':'\\xF1','\\xD2':'\\xF2','\\xD3':'\\xF3','\\xD4':'\\xF4','\\xD5':'\\xF5','\\xD6':'\\xF6','\\xD8':'\\xF8','\\xD9':'\\xF9','\\xDA':'\\xFA','\\xDB':'\\xFB','\\xDC':'\\xFC','\\xDD':'\\xFD','\\xDE':'\\xFE','\\u0100':'\\u0101','\\u0102':'\\u0103','\\u0104':'\\u0105','\\u0106':'\\u0107','\\u0108':'\\u0109','\\u010A':'\\u010B','\\u010C':'\\u010D','\\u010E':'\\u010F','\\u0110':'\\u0111','\\u0112':'\\u0113','\\u0114':'\\u0115','\\u0116':'\\u0117','\\u0118':'\\u0119','\\u011A':'\\u011B','\\u011C':'\\u011D','\\u011E':'\\u011F','\\u0120':'\\u0121','\\u0122':'\\u0123','\\u0124':'\\u0125','\\u0126':'\\u0127','\\u0128':'\\u0129','\\u012A':'\\u012B','\\u012C':'\\u012D','\\u012E':'\\u012F','\\u0132':'\\u0133','\\u0134':'\\u0135','\\u0136':'\\u0137','\\u0139':'\\u013A','\\u013B':'\\u013C','\\u013D':'\\u013E','\\u013F':'\\u0140','\\u0141':'\\u0142','\\u0143':'\\u0144','\\u0145':'\\u0146','\\u0147':'\\u0148','\\u014A':'\\u014B','\\u014C':'\\u014D','\\u014E':'\\u014F','\\u0150':'\\u0151','\\u0152':'\\u0153','\\u0154':'\\u0155','\\u0156':'\\u0157','\\u0158':'\\u0159','\\u015A':'\\u015B','\\u015C':'\\u015D','\\u015E':'\\u015F','\\u0160':'\\u0161','\\u0162':'\\u0163','\\u0164':'\\u0165','\\u0166':'\\u0167','\\u0168':'\\u0169','\\u016A':'\\u016B','\\u016C':'\\u016D','\\u016E':'\\u016F','\\u0170':'\\u0171','\\u0172':'\\u0173','\\u0174':'\\u0175','\\u0176':'\\u0177','\\u0178':'\\xFF','\\u0179':'\\u017A','\\u017B':'\\u017C','\\u017D':'\\u017E','\\u017F':'s','\\u0181':'\\u0253','\\u0182':'\\u0183','\\u0184':'\\u0185','\\u0186':'\\u0254','\\u0187':'\\u0188','\\u0189':'\\u0256','\\u018A':'\\u0257','\\u018B':'\\u018C','\\u018E':'\\u01DD','\\u018F':'\\u0259','\\u0190':'\\u025B','\\u0191':'\\u0192','\\u0193':'\\u0260','\\u0194':'\\u0263','\\u0196':'\\u0269','\\u0197':'\\u0268','\\u0198':'\\u0199','\\u019C':'\\u026F','\\u019D':'\\u0272','\\u019F':'\\u0275','\\u01A0':'\\u01A1','\\u01A2':'\\u01A3','\\u01A4':'\\u01A5','\\u01A6':'\\u0280','\\u01A7':'\\u01A8','\\u01A9':'\\u0283','\\u01AC':'\\u01AD','\\u01AE':'\\u0288','\\u01AF':'\\u01B0','\\u01B1':'\\u028A','\\u01B2':'\\u028B','\\u01B3':'\\u01B4','\\u01B5':'\\u01B6','\\u01B7':'\\u0292','\\u01B8':'\\u01B9','\\u01BC':'\\u01BD','\\u01C4':'\\u01C6','\\u01C5':'\\u01C6','\\u01C7':'\\u01C9','\\u01C8':'\\u01C9','\\u01CA':'\\u01CC','\\u01CB':'\\u01CC','\\u01CD':'\\u01CE','\\u01CF':'\\u01D0','\\u01D1':'\\u01D2','\\u01D3':'\\u01D4','\\u01D5':'\\u01D6','\\u01D7':'\\u01D8','\\u01D9':'\\u01DA','\\u01DB':'\\u01DC','\\u01DE':'\\u01DF','\\u01E0':'\\u01E1','\\u01E2':'\\u01E3','\\u01E4':'\\u01E5','\\u01E6':'\\u01E7','\\u01E8':'\\u01E9','\\u01EA':'\\u01EB','\\u01EC':'\\u01ED','\\u01EE':'\\u01EF','\\u01F1':'\\u01F3','\\u01F2':'\\u01F3','\\u01F4':'\\u01F5','\\u01F6':'\\u0195','\\u01F7':'\\u01BF','\\u01F8':'\\u01F9','\\u01FA':'\\u01FB','\\u01FC':'\\u01FD','\\u01FE':'\\u01FF','\\u0200':'\\u0201','\\u0202':'\\u0203','\\u0204':'\\u0205','\\u0206':'\\u0207','\\u0208':'\\u0209','\\u020A':'\\u020B','\\u020C':'\\u020D','\\u020E':'\\u020F','\\u0210':'\\u0211','\\u0212':'\\u0213','\\u0214':'\\u0215','\\u0216':'\\u0217','\\u0218':'\\u0219','\\u021A':'\\u021B','\\u021C':'\\u021D','\\u021E':'\\u021F','\\u0220':'\\u019E','\\u0222':'\\u0223','\\u0224':'\\u0225','\\u0226':'\\u0227','\\u0228':'\\u0229','\\u022A':'\\u022B','\\u022C':'\\u022D','\\u022E':'\\u022F','\\u0230':'\\u0231','\\u0232':'\\u0233','\\u023A':'\\u2C65','\\u023B':'\\u023C','\\u023D':'\\u019A','\\u023E':'\\u2C66','\\u0241':'\\u0242','\\u0243':'\\u0180','\\u0244':'\\u0289','\\u0245':'\\u028C','\\u0246':'\\u0247','\\u0248':'\\u0249','\\u024A':'\\u024B','\\u024C':'\\u024D','\\u024E':'\\u024F','\\u0345':'\\u03B9','\\u0370':'\\u0371','\\u0372':'\\u0373','\\u0376':'\\u0377','\\u037F':'\\u03F3','\\u0386':'\\u03AC','\\u0388':'\\u03AD','\\u0389':'\\u03AE','\\u038A':'\\u03AF','\\u038C':'\\u03CC','\\u038E':'\\u03CD','\\u038F':'\\u03CE','\\u0391':'\\u03B1','\\u0392':'\\u03B2','\\u0393':'\\u03B3','\\u0394':'\\u03B4','\\u0395':'\\u03B5','\\u0396':'\\u03B6','\\u0397':'\\u03B7','\\u0398':'\\u03B8','\\u0399':'\\u03B9','\\u039A':'\\u03BA','\\u039B':'\\u03BB','\\u039C':'\\u03BC','\\u039D':'\\u03BD','\\u039E':'\\u03BE','\\u039F':'\\u03BF','\\u03A0':'\\u03C0','\\u03A1':'\\u03C1','\\u03A3':'\\u03C3','\\u03A4':'\\u03C4','\\u03A5':'\\u03C5','\\u03A6':'\\u03C6','\\u03A7':'\\u03C7','\\u03A8':'\\u03C8','\\u03A9':'\\u03C9','\\u03AA':'\\u03CA','\\u03AB':'\\u03CB','\\u03C2':'\\u03C3','\\u03CF':'\\u03D7','\\u03D0':'\\u03B2','\\u03D1':'\\u03B8','\\u03D5':'\\u03C6','\\u03D6':'\\u03C0','\\u03D8':'\\u03D9','\\u03DA':'\\u03DB','\\u03DC':'\\u03DD','\\u03DE':'\\u03DF','\\u03E0':'\\u03E1','\\u03E2':'\\u03E3','\\u03E4':'\\u03E5','\\u03E6':'\\u03E7','\\u03E8':'\\u03E9','\\u03EA':'\\u03EB','\\u03EC':'\\u03ED','\\u03EE':'\\u03EF','\\u03F0':'\\u03BA','\\u03F1':'\\u03C1','\\u03F4':'\\u03B8','\\u03F5':'\\u03B5','\\u03F7':'\\u03F8','\\u03F9':'\\u03F2','\\u03FA':'\\u03FB','\\u03FD':'\\u037B','\\u03FE':'\\u037C','\\u03FF':'\\u037D','\\u0400':'\\u0450','\\u0401':'\\u0451','\\u0402':'\\u0452','\\u0403':'\\u0453','\\u0404':'\\u0454','\\u0405':'\\u0455','\\u0406':'\\u0456','\\u0407':'\\u0457','\\u0408':'\\u0458','\\u0409':'\\u0459','\\u040A':'\\u045A','\\u040B':'\\u045B','\\u040C':'\\u045C','\\u040D':'\\u045D','\\u040E':'\\u045E','\\u040F':'\\u045F','\\u0410':'\\u0430','\\u0411':'\\u0431','\\u0412':'\\u0432','\\u0413':'\\u0433','\\u0414':'\\u0434','\\u0415':'\\u0435','\\u0416':'\\u0436','\\u0417':'\\u0437','\\u0418':'\\u0438','\\u0419':'\\u0439','\\u041A':'\\u043A','\\u041B':'\\u043B','\\u041C':'\\u043C','\\u041D':'\\u043D','\\u041E':'\\u043E','\\u041F':'\\u043F','\\u0420':'\\u0440','\\u0421':'\\u0441','\\u0422':'\\u0442','\\u0423':'\\u0443','\\u0424':'\\u0444','\\u0425':'\\u0445','\\u0426':'\\u0446','\\u0427':'\\u0447','\\u0428':'\\u0448','\\u0429':'\\u0449','\\u042A':'\\u044A','\\u042B':'\\u044B','\\u042C':'\\u044C','\\u042D':'\\u044D','\\u042E':'\\u044E','\\u042F':'\\u044F','\\u0460':'\\u0461','\\u0462':'\\u0463','\\u0464':'\\u0465','\\u0466':'\\u0467','\\u0468':'\\u0469','\\u046A':'\\u046B','\\u046C':'\\u046D','\\u046E':'\\u046F','\\u0470':'\\u0471','\\u0472':'\\u0473','\\u0474':'\\u0475','\\u0476':'\\u0477','\\u0478':'\\u0479','\\u047A':'\\u047B','\\u047C':'\\u047D','\\u047E':'\\u047F','\\u0480':'\\u0481','\\u048A':'\\u048B','\\u048C':'\\u048D','\\u048E':'\\u048F','\\u0490':'\\u0491','\\u0492':'\\u0493','\\u0494':'\\u0495','\\u0496':'\\u0497','\\u0498':'\\u0499','\\u049A':'\\u049B','\\u049C':'\\u049D','\\u049E':'\\u049F','\\u04A0':'\\u04A1','\\u04A2':'\\u04A3','\\u04A4':'\\u04A5','\\u04A6':'\\u04A7','\\u04A8':'\\u04A9','\\u04AA':'\\u04AB','\\u04AC':'\\u04AD','\\u04AE':'\\u04AF','\\u04B0':'\\u04B1','\\u04B2':'\\u04B3','\\u04B4':'\\u04B5','\\u04B6':'\\u04B7','\\u04B8':'\\u04B9','\\u04BA':'\\u04BB','\\u04BC':'\\u04BD','\\u04BE':'\\u04BF','\\u04C0':'\\u04CF','\\u04C1':'\\u04C2','\\u04C3':'\\u04C4','\\u04C5':'\\u04C6','\\u04C7':'\\u04C8','\\u04C9':'\\u04CA','\\u04CB':'\\u04CC','\\u04CD':'\\u04CE','\\u04D0':'\\u04D1','\\u04D2':'\\u04D3','\\u04D4':'\\u04D5','\\u04D6':'\\u04D7','\\u04D8':'\\u04D9','\\u04DA':'\\u04DB','\\u04DC':'\\u04DD','\\u04DE':'\\u04DF','\\u04E0':'\\u04E1','\\u04E2':'\\u04E3','\\u04E4':'\\u04E5','\\u04E6':'\\u04E7','\\u04E8':'\\u04E9','\\u04EA':'\\u04EB','\\u04EC':'\\u04ED','\\u04EE':'\\u04EF','\\u04F0':'\\u04F1','\\u04F2':'\\u04F3','\\u04F4':'\\u04F5','\\u04F6':'\\u04F7','\\u04F8':'\\u04F9','\\u04FA':'\\u04FB','\\u04FC':'\\u04FD','\\u04FE':'\\u04FF','\\u0500':'\\u0501','\\u0502':'\\u0503','\\u0504':'\\u0505','\\u0506':'\\u0507','\\u0508':'\\u0509','\\u050A':'\\u050B','\\u050C':'\\u050D','\\u050E':'\\u050F','\\u0510':'\\u0511','\\u0512':'\\u0513','\\u0514':'\\u0515','\\u0516':'\\u0517','\\u0518':'\\u0519','\\u051A':'\\u051B','\\u051C':'\\u051D','\\u051E':'\\u051F','\\u0520':'\\u0521','\\u0522':'\\u0523','\\u0524':'\\u0525','\\u0526':'\\u0527','\\u0528':'\\u0529','\\u052A':'\\u052B','\\u052C':'\\u052D','\\u052E':'\\u052F','\\u0531':'\\u0561','\\u0532':'\\u0562','\\u0533':'\\u0563','\\u0534':'\\u0564','\\u0535':'\\u0565','\\u0536':'\\u0566','\\u0537':'\\u0567','\\u0538':'\\u0568','\\u0539':'\\u0569','\\u053A':'\\u056A','\\u053B':'\\u056B','\\u053C':'\\u056C','\\u053D':'\\u056D','\\u053E':'\\u056E','\\u053F':'\\u056F','\\u0540':'\\u0570','\\u0541':'\\u0571','\\u0542':'\\u0572','\\u0543':'\\u0573','\\u0544':'\\u0574','\\u0545':'\\u0575','\\u0546':'\\u0576','\\u0547':'\\u0577','\\u0548':'\\u0578','\\u0549':'\\u0579','\\u054A':'\\u057A','\\u054B':'\\u057B','\\u054C':'\\u057C','\\u054D':'\\u057D','\\u054E':'\\u057E','\\u054F':'\\u057F','\\u0550':'\\u0580','\\u0551':'\\u0581','\\u0552':'\\u0582','\\u0553':'\\u0583','\\u0554':'\\u0584','\\u0555':'\\u0585','\\u0556':'\\u0586','\\u10A0':'\\u2D00','\\u10A1':'\\u2D01','\\u10A2':'\\u2D02','\\u10A3':'\\u2D03','\\u10A4':'\\u2D04','\\u10A5':'\\u2D05','\\u10A6':'\\u2D06','\\u10A7':'\\u2D07','\\u10A8':'\\u2D08','\\u10A9':'\\u2D09','\\u10AA':'\\u2D0A','\\u10AB':'\\u2D0B','\\u10AC':'\\u2D0C','\\u10AD':'\\u2D0D','\\u10AE':'\\u2D0E','\\u10AF':'\\u2D0F','\\u10B0':'\\u2D10','\\u10B1':'\\u2D11','\\u10B2':'\\u2D12','\\u10B3':'\\u2D13','\\u10B4':'\\u2D14','\\u10B5':'\\u2D15','\\u10B6':'\\u2D16','\\u10B7':'\\u2D17','\\u10B8':'\\u2D18','\\u10B9':'\\u2D19','\\u10BA':'\\u2D1A','\\u10BB':'\\u2D1B','\\u10BC':'\\u2D1C','\\u10BD':'\\u2D1D','\\u10BE':'\\u2D1E','\\u10BF':'\\u2D1F','\\u10C0':'\\u2D20','\\u10C1':'\\u2D21','\\u10C2':'\\u2D22','\\u10C3':'\\u2D23','\\u10C4':'\\u2D24','\\u10C5':'\\u2D25','\\u10C7':'\\u2D27','\\u10CD':'\\u2D2D','\\u1E00':'\\u1E01','\\u1E02':'\\u1E03','\\u1E04':'\\u1E05','\\u1E06':'\\u1E07','\\u1E08':'\\u1E09','\\u1E0A':'\\u1E0B','\\u1E0C':'\\u1E0D','\\u1E0E':'\\u1E0F','\\u1E10':'\\u1E11','\\u1E12':'\\u1E13','\\u1E14':'\\u1E15','\\u1E16':'\\u1E17','\\u1E18':'\\u1E19','\\u1E1A':'\\u1E1B','\\u1E1C':'\\u1E1D','\\u1E1E':'\\u1E1F','\\u1E20':'\\u1E21','\\u1E22':'\\u1E23','\\u1E24':'\\u1E25','\\u1E26':'\\u1E27','\\u1E28':'\\u1E29','\\u1E2A':'\\u1E2B','\\u1E2C':'\\u1E2D','\\u1E2E':'\\u1E2F','\\u1E30':'\\u1E31','\\u1E32':'\\u1E33','\\u1E34':'\\u1E35','\\u1E36':'\\u1E37','\\u1E38':'\\u1E39','\\u1E3A':'\\u1E3B','\\u1E3C':'\\u1E3D','\\u1E3E':'\\u1E3F','\\u1E40':'\\u1E41','\\u1E42':'\\u1E43','\\u1E44':'\\u1E45','\\u1E46':'\\u1E47','\\u1E48':'\\u1E49','\\u1E4A':'\\u1E4B','\\u1E4C':'\\u1E4D','\\u1E4E':'\\u1E4F','\\u1E50':'\\u1E51','\\u1E52':'\\u1E53','\\u1E54':'\\u1E55','\\u1E56':'\\u1E57','\\u1E58':'\\u1E59','\\u1E5A':'\\u1E5B','\\u1E5C':'\\u1E5D','\\u1E5E':'\\u1E5F','\\u1E60':'\\u1E61','\\u1E62':'\\u1E63','\\u1E64':'\\u1E65','\\u1E66':'\\u1E67','\\u1E68':'\\u1E69','\\u1E6A':'\\u1E6B','\\u1E6C':'\\u1E6D','\\u1E6E':'\\u1E6F','\\u1E70':'\\u1E71','\\u1E72':'\\u1E73','\\u1E74':'\\u1E75','\\u1E76':'\\u1E77','\\u1E78':'\\u1E79','\\u1E7A':'\\u1E7B','\\u1E7C':'\\u1E7D','\\u1E7E':'\\u1E7F','\\u1E80':'\\u1E81','\\u1E82':'\\u1E83','\\u1E84':'\\u1E85','\\u1E86':'\\u1E87','\\u1E88':'\\u1E89','\\u1E8A':'\\u1E8B','\\u1E8C':'\\u1E8D','\\u1E8E':'\\u1E8F','\\u1E90':'\\u1E91','\\u1E92':'\\u1E93','\\u1E94':'\\u1E95','\\u1E9B':'\\u1E61','\\u1EA0':'\\u1EA1','\\u1EA2':'\\u1EA3','\\u1EA4':'\\u1EA5','\\u1EA6':'\\u1EA7','\\u1EA8':'\\u1EA9','\\u1EAA':'\\u1EAB','\\u1EAC':'\\u1EAD','\\u1EAE':'\\u1EAF','\\u1EB0':'\\u1EB1','\\u1EB2':'\\u1EB3','\\u1EB4':'\\u1EB5','\\u1EB6':'\\u1EB7','\\u1EB8':'\\u1EB9','\\u1EBA':'\\u1EBB','\\u1EBC':'\\u1EBD','\\u1EBE':'\\u1EBF','\\u1EC0':'\\u1EC1','\\u1EC2':'\\u1EC3','\\u1EC4':'\\u1EC5','\\u1EC6':'\\u1EC7','\\u1EC8':'\\u1EC9','\\u1ECA':'\\u1ECB','\\u1ECC':'\\u1ECD','\\u1ECE':'\\u1ECF','\\u1ED0':'\\u1ED1','\\u1ED2':'\\u1ED3','\\u1ED4':'\\u1ED5','\\u1ED6':'\\u1ED7','\\u1ED8':'\\u1ED9','\\u1EDA':'\\u1EDB','\\u1EDC':'\\u1EDD','\\u1EDE':'\\u1EDF','\\u1EE0':'\\u1EE1','\\u1EE2':'\\u1EE3','\\u1EE4':'\\u1EE5','\\u1EE6':'\\u1EE7','\\u1EE8':'\\u1EE9','\\u1EEA':'\\u1EEB','\\u1EEC':'\\u1EED','\\u1EEE':'\\u1EEF','\\u1EF0':'\\u1EF1','\\u1EF2':'\\u1EF3','\\u1EF4':'\\u1EF5','\\u1EF6':'\\u1EF7','\\u1EF8':'\\u1EF9','\\u1EFA':'\\u1EFB','\\u1EFC':'\\u1EFD','\\u1EFE':'\\u1EFF','\\u1F08':'\\u1F00','\\u1F09':'\\u1F01','\\u1F0A':'\\u1F02','\\u1F0B':'\\u1F03','\\u1F0C':'\\u1F04','\\u1F0D':'\\u1F05','\\u1F0E':'\\u1F06','\\u1F0F':'\\u1F07','\\u1F18':'\\u1F10','\\u1F19':'\\u1F11','\\u1F1A':'\\u1F12','\\u1F1B':'\\u1F13','\\u1F1C':'\\u1F14','\\u1F1D':'\\u1F15','\\u1F28':'\\u1F20','\\u1F29':'\\u1F21','\\u1F2A':'\\u1F22','\\u1F2B':'\\u1F23','\\u1F2C':'\\u1F24','\\u1F2D':'\\u1F25','\\u1F2E':'\\u1F26','\\u1F2F':'\\u1F27','\\u1F38':'\\u1F30','\\u1F39':'\\u1F31','\\u1F3A':'\\u1F32','\\u1F3B':'\\u1F33','\\u1F3C':'\\u1F34','\\u1F3D':'\\u1F35','\\u1F3E':'\\u1F36','\\u1F3F':'\\u1F37','\\u1F48':'\\u1F40','\\u1F49':'\\u1F41','\\u1F4A':'\\u1F42','\\u1F4B':'\\u1F43','\\u1F4C':'\\u1F44','\\u1F4D':'\\u1F45','\\u1F59':'\\u1F51','\\u1F5B':'\\u1F53','\\u1F5D':'\\u1F55','\\u1F5F':'\\u1F57','\\u1F68':'\\u1F60','\\u1F69':'\\u1F61','\\u1F6A':'\\u1F62','\\u1F6B':'\\u1F63','\\u1F6C':'\\u1F64','\\u1F6D':'\\u1F65','\\u1F6E':'\\u1F66','\\u1F6F':'\\u1F67','\\u1FB8':'\\u1FB0','\\u1FB9':'\\u1FB1','\\u1FBA':'\\u1F70','\\u1FBB':'\\u1F71','\\u1FBE':'\\u03B9','\\u1FC8':'\\u1F72','\\u1FC9':'\\u1F73','\\u1FCA':'\\u1F74','\\u1FCB':'\\u1F75','\\u1FD8':'\\u1FD0','\\u1FD9':'\\u1FD1','\\u1FDA':'\\u1F76','\\u1FDB':'\\u1F77','\\u1FE8':'\\u1FE0','\\u1FE9':'\\u1FE1','\\u1FEA':'\\u1F7A','\\u1FEB':'\\u1F7B','\\u1FEC':'\\u1FE5','\\u1FF8':'\\u1F78','\\u1FF9':'\\u1F79','\\u1FFA':'\\u1F7C','\\u1FFB':'\\u1F7D','\\u2126':'\\u03C9','\\u212A':'k','\\u212B':'\\xE5','\\u2132':'\\u214E','\\u2160':'\\u2170','\\u2161':'\\u2171','\\u2162':'\\u2172','\\u2163':'\\u2173','\\u2164':'\\u2174','\\u2165':'\\u2175','\\u2166':'\\u2176','\\u2167':'\\u2177','\\u2168':'\\u2178','\\u2169':'\\u2179','\\u216A':'\\u217A','\\u216B':'\\u217B','\\u216C':'\\u217C','\\u216D':'\\u217D','\\u216E':'\\u217E','\\u216F':'\\u217F','\\u2183':'\\u2184','\\u24B6':'\\u24D0','\\u24B7':'\\u24D1','\\u24B8':'\\u24D2','\\u24B9':'\\u24D3','\\u24BA':'\\u24D4','\\u24BB':'\\u24D5','\\u24BC':'\\u24D6','\\u24BD':'\\u24D7','\\u24BE':'\\u24D8','\\u24BF':'\\u24D9','\\u24C0':'\\u24DA','\\u24C1':'\\u24DB','\\u24C2':'\\u24DC','\\u24C3':'\\u24DD','\\u24C4':'\\u24DE','\\u24C5':'\\u24DF','\\u24C6':'\\u24E0','\\u24C7':'\\u24E1','\\u24C8':'\\u24E2','\\u24C9':'\\u24E3','\\u24CA':'\\u24E4','\\u24CB':'\\u24E5','\\u24CC':'\\u24E6','\\u24CD':'\\u24E7','\\u24CE':'\\u24E8','\\u24CF':'\\u24E9','\\u2C00':'\\u2C30','\\u2C01':'\\u2C31','\\u2C02':'\\u2C32','\\u2C03':'\\u2C33','\\u2C04':'\\u2C34','\\u2C05':'\\u2C35','\\u2C06':'\\u2C36','\\u2C07':'\\u2C37','\\u2C08':'\\u2C38','\\u2C09':'\\u2C39','\\u2C0A':'\\u2C3A','\\u2C0B':'\\u2C3B','\\u2C0C':'\\u2C3C','\\u2C0D':'\\u2C3D','\\u2C0E':'\\u2C3E','\\u2C0F':'\\u2C3F','\\u2C10':'\\u2C40','\\u2C11':'\\u2C41','\\u2C12':'\\u2C42','\\u2C13':'\\u2C43','\\u2C14':'\\u2C44','\\u2C15':'\\u2C45','\\u2C16':'\\u2C46','\\u2C17':'\\u2C47','\\u2C18':'\\u2C48','\\u2C19':'\\u2C49','\\u2C1A':'\\u2C4A','\\u2C1B':'\\u2C4B','\\u2C1C':'\\u2C4C','\\u2C1D':'\\u2C4D','\\u2C1E':'\\u2C4E','\\u2C1F':'\\u2C4F','\\u2C20':'\\u2C50','\\u2C21':'\\u2C51','\\u2C22':'\\u2C52','\\u2C23':'\\u2C53','\\u2C24':'\\u2C54','\\u2C25':'\\u2C55','\\u2C26':'\\u2C56','\\u2C27':'\\u2C57','\\u2C28':'\\u2C58','\\u2C29':'\\u2C59','\\u2C2A':'\\u2C5A','\\u2C2B':'\\u2C5B','\\u2C2C':'\\u2C5C','\\u2C2D':'\\u2C5D','\\u2C2E':'\\u2C5E','\\u2C60':'\\u2C61','\\u2C62':'\\u026B','\\u2C63':'\\u1D7D','\\u2C64':'\\u027D','\\u2C67':'\\u2C68','\\u2C69':'\\u2C6A','\\u2C6B':'\\u2C6C','\\u2C6D':'\\u0251','\\u2C6E':'\\u0271','\\u2C6F':'\\u0250','\\u2C70':'\\u0252','\\u2C72':'\\u2C73','\\u2C75':'\\u2C76','\\u2C7E':'\\u023F','\\u2C7F':'\\u0240','\\u2C80':'\\u2C81','\\u2C82':'\\u2C83','\\u2C84':'\\u2C85','\\u2C86':'\\u2C87','\\u2C88':'\\u2C89','\\u2C8A':'\\u2C8B','\\u2C8C':'\\u2C8D','\\u2C8E':'\\u2C8F','\\u2C90':'\\u2C91','\\u2C92':'\\u2C93','\\u2C94':'\\u2C95','\\u2C96':'\\u2C97','\\u2C98':'\\u2C99','\\u2C9A':'\\u2C9B','\\u2C9C':'\\u2C9D','\\u2C9E':'\\u2C9F','\\u2CA0':'\\u2CA1','\\u2CA2':'\\u2CA3','\\u2CA4':'\\u2CA5','\\u2CA6':'\\u2CA7','\\u2CA8':'\\u2CA9','\\u2CAA':'\\u2CAB','\\u2CAC':'\\u2CAD','\\u2CAE':'\\u2CAF','\\u2CB0':'\\u2CB1','\\u2CB2':'\\u2CB3','\\u2CB4':'\\u2CB5','\\u2CB6':'\\u2CB7','\\u2CB8':'\\u2CB9','\\u2CBA':'\\u2CBB','\\u2CBC':'\\u2CBD','\\u2CBE':'\\u2CBF','\\u2CC0':'\\u2CC1','\\u2CC2':'\\u2CC3','\\u2CC4':'\\u2CC5','\\u2CC6':'\\u2CC7','\\u2CC8':'\\u2CC9','\\u2CCA':'\\u2CCB','\\u2CCC':'\\u2CCD','\\u2CCE':'\\u2CCF','\\u2CD0':'\\u2CD1','\\u2CD2':'\\u2CD3','\\u2CD4':'\\u2CD5','\\u2CD6':'\\u2CD7','\\u2CD8':'\\u2CD9','\\u2CDA':'\\u2CDB','\\u2CDC':'\\u2CDD','\\u2CDE':'\\u2CDF','\\u2CE0':'\\u2CE1','\\u2CE2':'\\u2CE3','\\u2CEB':'\\u2CEC','\\u2CED':'\\u2CEE','\\u2CF2':'\\u2CF3','\\uA640':'\\uA641','\\uA642':'\\uA643','\\uA644':'\\uA645','\\uA646':'\\uA647','\\uA648':'\\uA649','\\uA64A':'\\uA64B','\\uA64C':'\\uA64D','\\uA64E':'\\uA64F','\\uA650':'\\uA651','\\uA652':'\\uA653','\\uA654':'\\uA655','\\uA656':'\\uA657','\\uA658':'\\uA659','\\uA65A':'\\uA65B','\\uA65C':'\\uA65D','\\uA65E':'\\uA65F','\\uA660':'\\uA661','\\uA662':'\\uA663','\\uA664':'\\uA665','\\uA666':'\\uA667','\\uA668':'\\uA669','\\uA66A':'\\uA66B','\\uA66C':'\\uA66D','\\uA680':'\\uA681','\\uA682':'\\uA683','\\uA684':'\\uA685','\\uA686':'\\uA687','\\uA688':'\\uA689','\\uA68A':'\\uA68B','\\uA68C':'\\uA68D','\\uA68E':'\\uA68F','\\uA690':'\\uA691','\\uA692':'\\uA693','\\uA694':'\\uA695','\\uA696':'\\uA697','\\uA698':'\\uA699','\\uA69A':'\\uA69B','\\uA722':'\\uA723','\\uA724':'\\uA725','\\uA726':'\\uA727','\\uA728':'\\uA729','\\uA72A':'\\uA72B','\\uA72C':'\\uA72D','\\uA72E':'\\uA72F','\\uA732':'\\uA733','\\uA734':'\\uA735','\\uA736':'\\uA737','\\uA738':'\\uA739','\\uA73A':'\\uA73B','\\uA73C':'\\uA73D','\\uA73E':'\\uA73F','\\uA740':'\\uA741','\\uA742':'\\uA743','\\uA744':'\\uA745','\\uA746':'\\uA747','\\uA748':'\\uA749','\\uA74A':'\\uA74B','\\uA74C':'\\uA74D','\\uA74E':'\\uA74F','\\uA750':'\\uA751','\\uA752':'\\uA753','\\uA754':'\\uA755','\\uA756':'\\uA757','\\uA758':'\\uA759','\\uA75A':'\\uA75B','\\uA75C':'\\uA75D','\\uA75E':'\\uA75F','\\uA760':'\\uA761','\\uA762':'\\uA763','\\uA764':'\\uA765','\\uA766':'\\uA767','\\uA768':'\\uA769','\\uA76A':'\\uA76B','\\uA76C':'\\uA76D','\\uA76E':'\\uA76F','\\uA779':'\\uA77A','\\uA77B':'\\uA77C','\\uA77D':'\\u1D79','\\uA77E':'\\uA77F','\\uA780':'\\uA781','\\uA782':'\\uA783','\\uA784':'\\uA785','\\uA786':'\\uA787','\\uA78B':'\\uA78C','\\uA78D':'\\u0265','\\uA790':'\\uA791','\\uA792':'\\uA793','\\uA796':'\\uA797','\\uA798':'\\uA799','\\uA79A':'\\uA79B','\\uA79C':'\\uA79D','\\uA79E':'\\uA79F','\\uA7A0':'\\uA7A1','\\uA7A2':'\\uA7A3','\\uA7A4':'\\uA7A5','\\uA7A6':'\\uA7A7','\\uA7A8':'\\uA7A9','\\uA7AA':'\\u0266','\\uA7AB':'\\u025C','\\uA7AC':'\\u0261','\\uA7AD':'\\u026C','\\uA7B0':'\\u029E','\\uA7B1':'\\u0287','\\uFF21':'\\uFF41','\\uFF22':'\\uFF42','\\uFF23':'\\uFF43','\\uFF24':'\\uFF44','\\uFF25':'\\uFF45','\\uFF26':'\\uFF46','\\uFF27':'\\uFF47','\\uFF28':'\\uFF48','\\uFF29':'\\uFF49','\\uFF2A':'\\uFF4A','\\uFF2B':'\\uFF4B','\\uFF2C':'\\uFF4C','\\uFF2D':'\\uFF4D','\\uFF2E':'\\uFF4E','\\uFF2F':'\\uFF4F','\\uFF30':'\\uFF50','\\uFF31':'\\uFF51','\\uFF32':'\\uFF52','\\uFF33':'\\uFF53','\\uFF34':'\\uFF54','\\uFF35':'\\uFF55','\\uFF36':'\\uFF56','\\uFF37':'\\uFF57','\\uFF38':'\\uFF58','\\uFF39':'\\uFF59','\\uFF3A':'\\uFF5A','\\uD801\\uDC00':'\\uD801\\uDC28','\\uD801\\uDC01':'\\uD801\\uDC29','\\uD801\\uDC02':'\\uD801\\uDC2A','\\uD801\\uDC03':'\\uD801\\uDC2B','\\uD801\\uDC04':'\\uD801\\uDC2C','\\uD801\\uDC05':'\\uD801\\uDC2D','\\uD801\\uDC06':'\\uD801\\uDC2E','\\uD801\\uDC07':'\\uD801\\uDC2F','\\uD801\\uDC08':'\\uD801\\uDC30','\\uD801\\uDC09':'\\uD801\\uDC31','\\uD801\\uDC0A':'\\uD801\\uDC32','\\uD801\\uDC0B':'\\uD801\\uDC33','\\uD801\\uDC0C':'\\uD801\\uDC34','\\uD801\\uDC0D':'\\uD801\\uDC35','\\uD801\\uDC0E':'\\uD801\\uDC36','\\uD801\\uDC0F':'\\uD801\\uDC37','\\uD801\\uDC10':'\\uD801\\uDC38','\\uD801\\uDC11':'\\uD801\\uDC39','\\uD801\\uDC12':'\\uD801\\uDC3A','\\uD801\\uDC13':'\\uD801\\uDC3B','\\uD801\\uDC14':'\\uD801\\uDC3C','\\uD801\\uDC15':'\\uD801\\uDC3D','\\uD801\\uDC16':'\\uD801\\uDC3E','\\uD801\\uDC17':'\\uD801\\uDC3F','\\uD801\\uDC18':'\\uD801\\uDC40','\\uD801\\uDC19':'\\uD801\\uDC41','\\uD801\\uDC1A':'\\uD801\\uDC42','\\uD801\\uDC1B':'\\uD801\\uDC43','\\uD801\\uDC1C':'\\uD801\\uDC44','\\uD801\\uDC1D':'\\uD801\\uDC45','\\uD801\\uDC1E':'\\uD801\\uDC46','\\uD801\\uDC1F':'\\uD801\\uDC47','\\uD801\\uDC20':'\\uD801\\uDC48','\\uD801\\uDC21':'\\uD801\\uDC49','\\uD801\\uDC22':'\\uD801\\uDC4A','\\uD801\\uDC23':'\\uD801\\uDC4B','\\uD801\\uDC24':'\\uD801\\uDC4C','\\uD801\\uDC25':'\\uD801\\uDC4D','\\uD801\\uDC26':'\\uD801\\uDC4E','\\uD801\\uDC27':'\\uD801\\uDC4F','\\uD806\\uDCA0':'\\uD806\\uDCC0','\\uD806\\uDCA1':'\\uD806\\uDCC1','\\uD806\\uDCA2':'\\uD806\\uDCC2','\\uD806\\uDCA3':'\\uD806\\uDCC3','\\uD806\\uDCA4':'\\uD806\\uDCC4','\\uD806\\uDCA5':'\\uD806\\uDCC5','\\uD806\\uDCA6':'\\uD806\\uDCC6','\\uD806\\uDCA7':'\\uD806\\uDCC7','\\uD806\\uDCA8':'\\uD806\\uDCC8','\\uD806\\uDCA9':'\\uD806\\uDCC9','\\uD806\\uDCAA':'\\uD806\\uDCCA','\\uD806\\uDCAB':'\\uD806\\uDCCB','\\uD806\\uDCAC':'\\uD806\\uDCCC','\\uD806\\uDCAD':'\\uD806\\uDCCD','\\uD806\\uDCAE':'\\uD806\\uDCCE','\\uD806\\uDCAF':'\\uD806\\uDCCF','\\uD806\\uDCB0':'\\uD806\\uDCD0','\\uD806\\uDCB1':'\\uD806\\uDCD1','\\uD806\\uDCB2':'\\uD806\\uDCD2','\\uD806\\uDCB3':'\\uD806\\uDCD3','\\uD806\\uDCB4':'\\uD806\\uDCD4','\\uD806\\uDCB5':'\\uD806\\uDCD5','\\uD806\\uDCB6':'\\uD806\\uDCD6','\\uD806\\uDCB7':'\\uD806\\uDCD7','\\uD806\\uDCB8':'\\uD806\\uDCD8','\\uD806\\uDCB9':'\\uD806\\uDCD9','\\uD806\\uDCBA':'\\uD806\\uDCDA','\\uD806\\uDCBB':'\\uD806\\uDCDB','\\uD806\\uDCBC':'\\uD806\\uDCDC','\\uD806\\uDCBD':'\\uD806\\uDCDD','\\uD806\\uDCBE':'\\uD806\\uDCDE','\\uD806\\uDCBF':'\\uD806\\uDCDF','\\xDF':'ss','\\u0130':'i\\u0307','\\u0149':'\\u02BCn','\\u01F0':'j\\u030C','\\u0390':'\\u03B9\\u0308\\u0301','\\u03B0':'\\u03C5\\u0308\\u0301','\\u0587':'\\u0565\\u0582','\\u1E96':'h\\u0331','\\u1E97':'t\\u0308','\\u1E98':'w\\u030A','\\u1E99':'y\\u030A','\\u1E9A':'a\\u02BE','\\u1E9E':'ss','\\u1F50':'\\u03C5\\u0313','\\u1F52':'\\u03C5\\u0313\\u0300','\\u1F54':'\\u03C5\\u0313\\u0301','\\u1F56':'\\u03C5\\u0313\\u0342','\\u1F80':'\\u1F00\\u03B9','\\u1F81':'\\u1F01\\u03B9','\\u1F82':'\\u1F02\\u03B9','\\u1F83':'\\u1F03\\u03B9','\\u1F84':'\\u1F04\\u03B9','\\u1F85':'\\u1F05\\u03B9','\\u1F86':'\\u1F06\\u03B9','\\u1F87':'\\u1F07\\u03B9','\\u1F88':'\\u1F00\\u03B9','\\u1F89':'\\u1F01\\u03B9','\\u1F8A':'\\u1F02\\u03B9','\\u1F8B':'\\u1F03\\u03B9','\\u1F8C':'\\u1F04\\u03B9','\\u1F8D':'\\u1F05\\u03B9','\\u1F8E':'\\u1F06\\u03B9','\\u1F8F':'\\u1F07\\u03B9','\\u1F90':'\\u1F20\\u03B9','\\u1F91':'\\u1F21\\u03B9','\\u1F92':'\\u1F22\\u03B9','\\u1F93':'\\u1F23\\u03B9','\\u1F94':'\\u1F24\\u03B9','\\u1F95':'\\u1F25\\u03B9','\\u1F96':'\\u1F26\\u03B9','\\u1F97':'\\u1F27\\u03B9','\\u1F98':'\\u1F20\\u03B9','\\u1F99':'\\u1F21\\u03B9','\\u1F9A':'\\u1F22\\u03B9','\\u1F9B':'\\u1F23\\u03B9','\\u1F9C':'\\u1F24\\u03B9','\\u1F9D':'\\u1F25\\u03B9','\\u1F9E':'\\u1F26\\u03B9','\\u1F9F':'\\u1F27\\u03B9','\\u1FA0':'\\u1F60\\u03B9','\\u1FA1':'\\u1F61\\u03B9','\\u1FA2':'\\u1F62\\u03B9','\\u1FA3':'\\u1F63\\u03B9','\\u1FA4':'\\u1F64\\u03B9','\\u1FA5':'\\u1F65\\u03B9','\\u1FA6':'\\u1F66\\u03B9','\\u1FA7':'\\u1F67\\u03B9','\\u1FA8':'\\u1F60\\u03B9','\\u1FA9':'\\u1F61\\u03B9','\\u1FAA':'\\u1F62\\u03B9','\\u1FAB':'\\u1F63\\u03B9','\\u1FAC':'\\u1F64\\u03B9','\\u1FAD':'\\u1F65\\u03B9','\\u1FAE':'\\u1F66\\u03B9','\\u1FAF':'\\u1F67\\u03B9','\\u1FB2':'\\u1F70\\u03B9','\\u1FB3':'\\u03B1\\u03B9','\\u1FB4':'\\u03AC\\u03B9','\\u1FB6':'\\u03B1\\u0342','\\u1FB7':'\\u03B1\\u0342\\u03B9','\\u1FBC':'\\u03B1\\u03B9','\\u1FC2':'\\u1F74\\u03B9','\\u1FC3':'\\u03B7\\u03B9','\\u1FC4':'\\u03AE\\u03B9','\\u1FC6':'\\u03B7\\u0342','\\u1FC7':'\\u03B7\\u0342\\u03B9','\\u1FCC':'\\u03B7\\u03B9','\\u1FD2':'\\u03B9\\u0308\\u0300','\\u1FD3':'\\u03B9\\u0308\\u0301','\\u1FD6':'\\u03B9\\u0342','\\u1FD7':'\\u03B9\\u0308\\u0342','\\u1FE2':'\\u03C5\\u0308\\u0300','\\u1FE3':'\\u03C5\\u0308\\u0301','\\u1FE4':'\\u03C1\\u0313','\\u1FE6':'\\u03C5\\u0342','\\u1FE7':'\\u03C5\\u0308\\u0342','\\u1FF2':'\\u1F7C\\u03B9','\\u1FF3':'\\u03C9\\u03B9','\\u1FF4':'\\u03CE\\u03B9','\\u1FF6':'\\u03C9\\u0342','\\u1FF7':'\\u03C9\\u0342\\u03B9','\\u1FFC':'\\u03C9\\u03B9','\\uFB00':'ff','\\uFB01':'fi','\\uFB02':'fl','\\uFB03':'ffi','\\uFB04':'ffl','\\uFB05':'st','\\uFB06':'st','\\uFB13':'\\u0574\\u0576','\\uFB14':'\\u0574\\u0565','\\uFB15':'\\u0574\\u056B','\\uFB16':'\\u057E\\u0576','\\uFB17':'\\u0574\\u056D'};\n\n// Normalize reference label: collapse internal whitespace\n// to single space, remove leading/trailing whitespace, case fold.\nmodule.exports = function(string) {\n    return string.slice(1, string.length - 1).trim().replace(regex, function($0) {\n        // Note: there is no need to check `hasOwnProperty($0)` here.\n        // If character not found in lookup table, it must be whitespace.\n        return map[$0] || ' ';\n    });\n};\n","\"use strict\";\n\nvar Node = require('./node');\nvar unescapeString = require('./common').unescapeString;\nvar OPENTAG = require('./common').OPENTAG;\nvar CLOSETAG = require('./common').CLOSETAG;\n\nvar CODE_INDENT = 4;\n\nvar C_TAB = 9;\nvar C_NEWLINE = 10;\nvar C_GREATERTHAN = 62;\nvar C_LESSTHAN = 60;\nvar C_SPACE = 32;\nvar C_OPEN_BRACKET = 91;\n\nvar InlineParser = require('./inlines');\n\nvar reHtmlBlockOpen = [\n   /./, // dummy for 0\n   /^<(?:script|pre|style)(?:\\s|>|$)/i,\n   /^<!--/,\n   /^<[?]/,\n   /^<![A-Z]/,\n   /^<!\\[CDATA\\[/,\n   /^<[/]?(?:address|article|aside|base|basefont|blockquote|body|caption|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption|figure|footer|form|frame|frameset|h[123456]|head|header|hr|html|iframe|legend|li|link|main|menu|menuitem|nav|noframes|ol|optgroup|option|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr|track|ul)(?:\\s|[/]?[>]|$)/i,\n    new RegExp('^(?:' + OPENTAG + '|' + CLOSETAG + ')\\\\s*$', 'i')\n];\n\nvar reHtmlBlockClose = [\n   /./, // dummy for 0\n   /<\\/(?:script|pre|style)>/i,\n   /-->/,\n   /\\?>/,\n   />/,\n   /\\]\\]>/\n];\n\nvar reThematicBreak = /^(?:(?:\\*[ \\t]*){3,}|(?:_[ \\t]*){3,}|(?:-[ \\t]*){3,})[ \\t]*$/;\n\nvar reMaybeSpecial = /^[#`~*+_=<>0-9-]/;\n\nvar reNonSpace = /[^ \\t\\f\\v\\r\\n]/;\n\nvar reBulletListMarker = /^[*+-]/;\n\nvar reOrderedListMarker = /^(\\d{1,9})([.)])/;\n\nvar reATXHeadingMarker = /^#{1,6}(?:[ \\t]+|$)/;\n\nvar reCodeFence = /^`{3,}(?!.*`)|^~{3,}/;\n\nvar reClosingCodeFence = /^(?:`{3,}|~{3,})(?= *$)/;\n\nvar reSetextHeadingLine = /^(?:=+|-+)[ \\t]*$/;\n\nvar reLineEnding = /\\r\\n|\\n|\\r/;\n\n// Returns true if string contains only space characters.\nvar isBlank = function(s) {\n    return !(reNonSpace.test(s));\n};\n\nvar isSpaceOrTab = function(c) {\n    return c === C_SPACE || c === C_TAB;\n};\n\nvar peek = function(ln, pos) {\n    if (pos < ln.length) {\n        return ln.charCodeAt(pos);\n    } else {\n        return -1;\n    }\n};\n\n// DOC PARSER\n\n// These are methods of a Parser object, defined below.\n\n// Returns true if block ends with a blank line, descending if needed\n// into lists and sublists.\nvar endsWithBlankLine = function(block) {\n    while (block) {\n        if (block._lastLineBlank) {\n            return true;\n        }\n        var t = block.type;\n        if (!block._lastLineChecked &&\n            (t === 'list' || t === 'item')) {\n            block._lastLineChecked = true;\n            block = block._lastChild;\n        } else {\n            block._lastLineChecked = true;\n            break;\n        }\n    }\n    return false;\n};\n\n// Add a line to the block at the tip.  We assume the tip\n// can accept lines -- that check should be done before calling this.\nvar addLine = function() {\n    if (this.partiallyConsumedTab) {\n      this.offset += 1; // skip over tab\n      // add space characters:\n      var charsToTab = 4 - (this.column % 4);\n      this.tip._string_content += (' '.repeat(charsToTab));\n    }\n    this.tip._string_content += this.currentLine.slice(this.offset) + '\\n';\n};\n\n// Add block of type tag as a child of the tip.  If the tip can't\n// accept children, close and finalize it and try its parent,\n// and so on til we find a block that can accept children.\nvar addChild = function(tag, offset) {\n    while (!this.blocks[this.tip.type].canContain(tag)) {\n        this.finalize(this.tip, this.lineNumber - 1);\n    }\n\n    var column_number = offset + 1; // offset 0 = column 1\n    var newBlock = new Node(tag, [[this.lineNumber, column_number], [0, 0]]);\n    newBlock._string_content = '';\n    this.tip.appendChild(newBlock);\n    this.tip = newBlock;\n    return newBlock;\n};\n\n// Parse a list marker and return data on the marker (type,\n// start, delimiter, bullet character, padding) or null.\nvar parseListMarker = function(parser, container) {\n    var rest = parser.currentLine.slice(parser.nextNonspace);\n    var match;\n    var nextc;\n    var spacesStartCol;\n    var spacesStartOffset;\n    var data = { type: null,\n                 tight: true,  // lists are tight by default\n                 bulletChar: null,\n                 start: null,\n                 delimiter: null,\n                 padding: null,\n                 markerOffset: parser.indent };\n    if (parser.indent >= 4) {\n        return null;\n    }\n    if ((match = rest.match(reBulletListMarker))) {\n        data.type = 'bullet';\n        data.bulletChar = match[0][0];\n\n    } else if ((match = rest.match(reOrderedListMarker)) &&\n                (container.type !== 'paragraph' ||\n                 match[1] === '1')) {\n        data.type = 'ordered';\n        data.start = parseInt(match[1]);\n        data.delimiter = match[2];\n    } else {\n        return null;\n    }\n    // make sure we have spaces after\n    nextc = peek(parser.currentLine, parser.nextNonspace + match[0].length);\n    if (!(nextc === -1 || nextc === C_TAB || nextc === C_SPACE)) {\n        return null;\n    }\n\n    // if it interrupts paragraph, make sure first line isn't blank\n    if (container.type === 'paragraph' && !parser.currentLine.slice(parser.nextNonspace + match[0].length).match(reNonSpace)) {\n        return null;\n    }\n\n    // we've got a match! advance offset and calculate padding\n    parser.advanceNextNonspace(); // to start of marker\n    parser.advanceOffset(match[0].length, true); // to end of marker\n    spacesStartCol = parser.column;\n    spacesStartOffset = parser.offset;\n    do {\n        parser.advanceOffset(1, true);\n        nextc = peek(parser.currentLine, parser.offset);\n    } while (parser.column - spacesStartCol < 5 &&\n           isSpaceOrTab(nextc));\n    var blank_item = peek(parser.currentLine, parser.offset) === -1;\n    var spaces_after_marker = parser.column - spacesStartCol;\n    if (spaces_after_marker >= 5 ||\n        spaces_after_marker < 1 ||\n        blank_item) {\n        data.padding = match[0].length + 1;\n        parser.column = spacesStartCol;\n        parser.offset = spacesStartOffset;\n        if (isSpaceOrTab(peek(parser.currentLine, parser.offset))) {\n            parser.advanceOffset(1, true);\n        }\n    } else {\n        data.padding = match[0].length + spaces_after_marker;\n    }\n    return data;\n};\n\n// Returns true if the two list items are of the same type,\n// with the same delimiter and bullet character.  This is used\n// in agglomerating list items into lists.\nvar listsMatch = function(list_data, item_data) {\n    return (list_data.type === item_data.type &&\n            list_data.delimiter === item_data.delimiter &&\n            list_data.bulletChar === item_data.bulletChar);\n};\n\n// Finalize and close any unmatched blocks.\nvar closeUnmatchedBlocks = function() {\n    if (!this.allClosed) {\n        // finalize any blocks not matched\n        while (this.oldtip !== this.lastMatchedContainer) {\n            var parent = this.oldtip._parent;\n            this.finalize(this.oldtip, this.lineNumber - 1);\n            this.oldtip = parent;\n        }\n        this.allClosed = true;\n    }\n};\n\n// 'finalize' is run when the block is closed.\n// 'continue' is run to check whether the block is continuing\n// at a certain line and offset (e.g. whether a block quote\n// contains a `>`.  It returns 0 for matched, 1 for not matched,\n// and 2 for \"we've dealt with this line completely, go to next.\"\nvar blocks = {\n    document: {\n        continue: function() { return 0; },\n        finalize: function() { return; },\n        canContain: function(t) { return (t !== 'item'); },\n        acceptsLines: false\n    },\n    list: {\n        continue: function() { return 0; },\n        finalize: function(parser, block) {\n            var item = block._firstChild;\n            while (item) {\n                // check for non-final list item ending with blank line:\n                if (endsWithBlankLine(item) && item._next) {\n                    block._listData.tight = false;\n                    break;\n                }\n                // recurse into children of list item, to see if there are\n                // spaces between any of them:\n                var subitem = item._firstChild;\n                while (subitem) {\n                    if (endsWithBlankLine(subitem) &&\n                        (item._next || subitem._next)) {\n                        block._listData.tight = false;\n                        break;\n                    }\n                    subitem = subitem._next;\n                }\n                item = item._next;\n            }\n        },\n        canContain: function(t) { return (t === 'item'); },\n        acceptsLines: false\n    },\n    block_quote: {\n        continue: function(parser) {\n            var ln = parser.currentLine;\n            if (!parser.indented &&\n                peek(ln, parser.nextNonspace) === C_GREATERTHAN) {\n                parser.advanceNextNonspace();\n                parser.advanceOffset(1, false);\n                if (isSpaceOrTab(peek(ln, parser.offset))) {\n                    parser.advanceOffset(1, true);\n                }\n            } else {\n                return 1;\n            }\n            return 0;\n        },\n        finalize: function() { return; },\n        canContain: function(t) { return (t !== 'item'); },\n        acceptsLines: false\n    },\n    item: {\n        continue: function(parser, container) {\n            if (parser.blank) {\n                if (container._firstChild == null) {\n                    // Blank line after empty list item\n                    return 1;\n                } else {\n                    parser.advanceNextNonspace();\n                }\n            } else if (parser.indent >=\n                       container._listData.markerOffset +\n                       container._listData.padding) {\n                parser.advanceOffset(container._listData.markerOffset +\n                    container._listData.padding, true);\n            } else {\n                return 1;\n            }\n            return 0;\n        },\n        finalize: function() { return; },\n        canContain: function(t) { return (t !== 'item'); },\n        acceptsLines: false\n    },\n    heading: {\n        continue: function() {\n            // a heading can never container > 1 line, so fail to match:\n            return 1;\n        },\n        finalize: function() { return; },\n        canContain: function() { return false; },\n        acceptsLines: false\n    },\n    thematic_break: {\n        continue: function() {\n            // a thematic break can never container > 1 line, so fail to match:\n            return 1;\n        },\n        finalize: function() { return; },\n        canContain: function() { return false; },\n        acceptsLines: false\n    },\n    code_block: {\n        continue: function(parser, container) {\n            var ln = parser.currentLine;\n            var indent = parser.indent;\n            if (container._isFenced) { // fenced\n                var match = (indent <= 3 &&\n                    ln.charAt(parser.nextNonspace) === container._fenceChar &&\n                    ln.slice(parser.nextNonspace).match(reClosingCodeFence));\n                if (match && match[0].length >= container._fenceLength) {\n                    // closing fence - we're at end of line, so we can return\n                    parser.lastLineLength = match[0].length;\n                    parser.finalize(container, parser.lineNumber);\n                    return 2;\n                } else {\n                    // skip optional spaces of fence offset\n                    var i = container._fenceOffset;\n                    while (i > 0 && isSpaceOrTab(peek(ln, parser.offset))) {\n                        parser.advanceOffset(1, true);\n                        i--;\n                    }\n                }\n            } else { // indented\n                if (indent >= CODE_INDENT) {\n                    parser.advanceOffset(CODE_INDENT, true);\n                } else if (parser.blank) {\n                    parser.advanceNextNonspace();\n                } else {\n                    return 1;\n                }\n            }\n            return 0;\n        },\n        finalize: function(parser, block) {\n            if (block._isFenced) { // fenced\n                // first line becomes info string\n                var content = block._string_content;\n                var newlinePos = content.indexOf('\\n');\n                var firstLine = content.slice(0, newlinePos);\n                var rest = content.slice(newlinePos + 1);\n                block.info = unescapeString(firstLine.trim());\n                block._literal = rest;\n            } else { // indented\n                block._literal = block._string_content.replace(/(\\n *)+$/, '\\n');\n            }\n            block._string_content = null; // allow GC\n        },\n        canContain: function() { return false; },\n        acceptsLines: true\n    },\n    html_block: {\n        continue: function(parser, container) {\n            return ((parser.blank &&\n                     (container._htmlBlockType === 6 ||\n                      container._htmlBlockType === 7)) ? 1 : 0);\n        },\n        finalize: function(parser, block) {\n            block._literal = block._string_content.replace(/(\\n *)+$/, '');\n            block._string_content = null; // allow GC\n        },\n        canContain: function() { return false; },\n        acceptsLines: true\n    },\n    paragraph: {\n        continue: function(parser) {\n            return (parser.blank ? 1 : 0);\n        },\n        finalize: function(parser, block) {\n            var pos;\n            var hasReferenceDefs = false;\n\n            // try parsing the beginning as link reference definitions:\n            while (peek(block._string_content, 0) === C_OPEN_BRACKET &&\n                   (pos =\n                    parser.inlineParser.parseReference(block._string_content,\n                                                       parser.refmap))) {\n                block._string_content = block._string_content.slice(pos);\n                hasReferenceDefs = true;\n            }\n            if (hasReferenceDefs && isBlank(block._string_content)) {\n                block.unlink();\n            }\n        },\n        canContain: function() { return false; },\n        acceptsLines: true\n    }\n};\n\n// block start functions.  Return values:\n// 0 = no match\n// 1 = matched container, keep going\n// 2 = matched leaf, no more block starts\nvar blockStarts = [\n    // block quote\n    function(parser) {\n        if (!parser.indented &&\n            peek(parser.currentLine, parser.nextNonspace) === C_GREATERTHAN) {\n            parser.advanceNextNonspace();\n            parser.advanceOffset(1, false);\n            // optional following space\n            if (isSpaceOrTab(peek(parser.currentLine, parser.offset))) {\n                parser.advanceOffset(1, true);\n            }\n            parser.closeUnmatchedBlocks();\n            parser.addChild('block_quote', parser.nextNonspace);\n            return 1;\n        } else {\n            return 0;\n        }\n    },\n\n    // ATX heading\n    function(parser) {\n        var match;\n        if (!parser.indented &&\n            (match = parser.currentLine.slice(parser.nextNonspace).match(reATXHeadingMarker))) {\n            parser.advanceNextNonspace();\n            parser.advanceOffset(match[0].length, false);\n            parser.closeUnmatchedBlocks();\n            var container = parser.addChild('heading', parser.nextNonspace);\n            container.level = match[0].trim().length; // number of #s\n            // remove trailing ###s:\n            container._string_content =\n                parser.currentLine.slice(parser.offset).replace(/^[ \\t]*#+[ \\t]*$/, '').replace(/[ \\t]+#+[ \\t]*$/, '');\n            parser.advanceOffset(parser.currentLine.length - parser.offset);\n            return 2;\n        } else {\n            return 0;\n        }\n    },\n\n    // Fenced code block\n    function(parser) {\n        var match;\n        if (!parser.indented &&\n            (match = parser.currentLine.slice(parser.nextNonspace).match(reCodeFence))) {\n            var fenceLength = match[0].length;\n            parser.closeUnmatchedBlocks();\n            var container = parser.addChild('code_block', parser.nextNonspace);\n            container._isFenced = true;\n            container._fenceLength = fenceLength;\n            container._fenceChar = match[0][0];\n            container._fenceOffset = parser.indent;\n            parser.advanceNextNonspace();\n            parser.advanceOffset(fenceLength, false);\n            return 2;\n        } else {\n            return 0;\n        }\n    },\n\n    // HTML block\n    function(parser, container) {\n        if (!parser.indented &&\n            peek(parser.currentLine, parser.nextNonspace) === C_LESSTHAN) {\n            var s = parser.currentLine.slice(parser.nextNonspace);\n            var blockType;\n\n            for (blockType = 1; blockType <= 7; blockType++) {\n                if (reHtmlBlockOpen[blockType].test(s) &&\n                    (blockType < 7 ||\n                     container.type !== 'paragraph')) {\n                    parser.closeUnmatchedBlocks();\n                    // We don't adjust parser.offset;\n                    // spaces are part of the HTML block:\n                    var b = parser.addChild('html_block',\n                                            parser.offset);\n                    b._htmlBlockType = blockType;\n                    return 2;\n                }\n            }\n        }\n\n        return 0;\n\n    },\n\n    // Setext heading\n    function(parser, container) {\n        var match;\n        if (!parser.indented &&\n            container.type === 'paragraph' &&\n                   ((match = parser.currentLine.slice(parser.nextNonspace).match(reSetextHeadingLine)))) {\n            parser.closeUnmatchedBlocks();\n            // resolve reference link definitiosn\n            var pos;\n            while (peek(container._string_content, 0) === C_OPEN_BRACKET &&\n                   (pos =\n                    parser.inlineParser.parseReference(\n                        container._string_content, parser.refmap))) {\n                container._string_content =\n                    container._string_content.slice(pos);\n            }\n            if (container._string_content.length > 0) {\n              var heading = new Node('heading', container.sourcepos);\n              heading.level = match[0][0] === '=' ? 1 : 2;\n              heading._string_content = container._string_content;\n              container.insertAfter(heading);\n              container.unlink();\n              parser.tip = heading;\n              parser.advanceOffset(parser.currentLine.length - parser.offset, false);\n              return 2;\n            } else {\n              return 0;\n            }\n        } else {\n            return 0;\n        }\n    },\n\n    // thematic break\n    function(parser) {\n        if (!parser.indented &&\n            reThematicBreak.test(parser.currentLine.slice(parser.nextNonspace))) {\n            parser.closeUnmatchedBlocks();\n            parser.addChild('thematic_break', parser.nextNonspace);\n            parser.advanceOffset(parser.currentLine.length - parser.offset, false);\n            return 2;\n        } else {\n            return 0;\n        }\n    },\n\n    // list item\n    function(parser, container) {\n        var data;\n\n        if ((!parser.indented || container.type === 'list')\n                && (data = parseListMarker(parser, container))) {\n            parser.closeUnmatchedBlocks();\n\n            // add the list if needed\n            if (parser.tip.type !== 'list' ||\n                !(listsMatch(container._listData, data))) {\n                container = parser.addChild('list', parser.nextNonspace);\n                container._listData = data;\n            }\n\n            // add the list item\n            container = parser.addChild('item', parser.nextNonspace);\n            container._listData = data;\n            return 1;\n        } else {\n            return 0;\n        }\n    },\n\n    // indented code block\n    function(parser) {\n        if (parser.indented &&\n            parser.tip.type !== 'paragraph' &&\n            !parser.blank) {\n            // indented code\n            parser.advanceOffset(CODE_INDENT, true);\n            parser.closeUnmatchedBlocks();\n            parser.addChild('code_block', parser.offset);\n            return 2;\n        } else {\n            return 0;\n        }\n     }\n\n];\n\nvar advanceOffset = function(count, columns) {\n    var currentLine = this.currentLine;\n    var charsToTab, charsToAdvance;\n    var c;\n    while (count > 0 && (c = currentLine[this.offset])) {\n        if (c === '\\t') {\n            charsToTab = 4 - (this.column % 4);\n            if (columns) {\n                this.partiallyConsumedTab = charsToTab > count;\n                charsToAdvance = charsToTab > count ? count : charsToTab;\n                this.column += charsToAdvance;\n                this.offset += this.partiallyConsumedTab ? 0 : 1;\n                count -= charsToAdvance;\n            } else {\n                this.partiallyConsumedTab = false;\n                this.column += charsToTab;\n                this.offset += 1;\n                count -= 1;\n            }\n        } else {\n            this.partiallyConsumedTab = false;\n            this.offset += 1;\n            this.column += 1; // assume ascii; block starts are ascii\n            count -= 1;\n        }\n    }\n};\n\nvar advanceNextNonspace = function() {\n    this.offset = this.nextNonspace;\n    this.column = this.nextNonspaceColumn;\n    this.partiallyConsumedTab = false;\n};\n\nvar findNextNonspace = function() {\n    var currentLine = this.currentLine;\n    var i = this.offset;\n    var cols = this.column;\n    var c;\n\n    while ((c = currentLine.charAt(i)) !== '') {\n        if (c === ' ') {\n            i++;\n            cols++;\n        } else if (c === '\\t') {\n            i++;\n            cols += (4 - (cols % 4));\n        } else {\n            break;\n        }\n    }\n    this.blank = (c === '\\n' || c === '\\r' || c === '');\n    this.nextNonspace = i;\n    this.nextNonspaceColumn = cols;\n    this.indent = this.nextNonspaceColumn - this.column;\n    this.indented = this.indent >= CODE_INDENT;\n};\n\n// Analyze a line of text and update the document appropriately.\n// We parse markdown text by calling this on each line of input,\n// then finalizing the document.\nvar incorporateLine = function(ln) {\n    var all_matched = true;\n    var t;\n\n    var container = this.doc;\n    this.oldtip = this.tip;\n    this.offset = 0;\n    this.column = 0;\n    this.blank = false;\n    this.partiallyConsumedTab = false;\n    this.lineNumber += 1;\n\n    // replace NUL characters for security\n    if (ln.indexOf('\\u0000') !== -1) {\n        ln = ln.replace(/\\0/g, '\\uFFFD');\n    }\n\n    this.currentLine = ln;\n\n    // For each containing block, try to parse the associated line start.\n    // Bail out on failure: container will point to the last matching block.\n    // Set all_matched to false if not all containers match.\n    var lastChild;\n    while ((lastChild = container._lastChild) && lastChild._open) {\n        container = lastChild;\n\n        this.findNextNonspace();\n\n        switch (this.blocks[container.type].continue(this, container)) {\n        case 0: // we've matched, keep going\n            break;\n        case 1: // we've failed to match a block\n            all_matched = false;\n            break;\n        case 2: // we've hit end of line for fenced code close and can return\n            return;\n        default:\n            throw 'continue returned illegal value, must be 0, 1, or 2';\n        }\n        if (!all_matched) {\n            container = container._parent; // back up to last matching block\n            break;\n        }\n    }\n\n    this.allClosed = (container === this.oldtip);\n    this.lastMatchedContainer = container;\n\n    var matchedLeaf = container.type !== 'paragraph' &&\n            blocks[container.type].acceptsLines;\n    var starts = this.blockStarts;\n    var startsLen = starts.length;\n    // Unless last matched container is a code block, try new container starts,\n    // adding children to the last matched container:\n    while (!matchedLeaf) {\n\n        this.findNextNonspace();\n\n        // this is a little performance optimization:\n        if (!this.indented &&\n            !reMaybeSpecial.test(ln.slice(this.nextNonspace))) {\n            this.advanceNextNonspace();\n            break;\n        }\n\n        var i = 0;\n        while (i < startsLen) {\n            var res = starts[i](this, container);\n            if (res === 1) {\n                container = this.tip;\n                break;\n            } else if (res === 2) {\n                container = this.tip;\n                matchedLeaf = true;\n                break;\n            } else {\n                i++;\n            }\n        }\n\n        if (i === startsLen) { // nothing matched\n            this.advanceNextNonspace();\n            break;\n        }\n    }\n\n    // What remains at the offset is a text line.  Add the text to the\n    // appropriate container.\n\n   // First check for a lazy paragraph continuation:\n    if (!this.allClosed && !this.blank &&\n        this.tip.type === 'paragraph') {\n        // lazy paragraph continuation\n        this.addLine();\n\n    } else { // not a lazy continuation\n\n        // finalize any blocks not matched\n        this.closeUnmatchedBlocks();\n        if (this.blank && container.lastChild) {\n            container.lastChild._lastLineBlank = true;\n        }\n\n        t = container.type;\n\n        // Block quote lines are never blank as they start with >\n        // and we don't count blanks in fenced code for purposes of tight/loose\n        // lists or breaking out of lists.  We also don't set _lastLineBlank\n        // on an empty list item, or if we just closed a fenced block.\n        var lastLineBlank = this.blank &&\n            !(t === 'block_quote' ||\n              (t === 'code_block' && container._isFenced) ||\n              (t === 'item' &&\n               !container._firstChild &&\n               container.sourcepos[0][0] === this.lineNumber));\n\n        // propagate lastLineBlank up through parents:\n        var cont = container;\n        while (cont) {\n            cont._lastLineBlank = lastLineBlank;\n            cont = cont._parent;\n        }\n\n        if (this.blocks[t].acceptsLines) {\n            this.addLine();\n            // if HtmlBlock, check for end condition\n            if (t === 'html_block' &&\n                container._htmlBlockType >= 1 &&\n                container._htmlBlockType <= 5 &&\n                reHtmlBlockClose[container._htmlBlockType].test(this.currentLine.slice(this.offset))) {\n                this.lastLineLength = ln.length;\n                this.finalize(container, this.lineNumber);\n            }\n\n        } else if (this.offset < ln.length && !this.blank) {\n            // create paragraph container for line\n            container = this.addChild('paragraph', this.offset);\n            this.advanceNextNonspace();\n            this.addLine();\n        }\n    }\n    this.lastLineLength = ln.length;\n};\n\n// Finalize a block.  Close it and do any necessary postprocessing,\n// e.g. creating string_content from strings, setting the 'tight'\n// or 'loose' status of a list, and parsing the beginnings\n// of paragraphs for reference definitions.  Reset the tip to the\n// parent of the closed block.\nvar finalize = function(block, lineNumber) {\n    var above = block._parent;\n    block._open = false;\n    block.sourcepos[1] = [lineNumber, this.lastLineLength];\n\n    this.blocks[block.type].finalize(this, block);\n\n    this.tip = above;\n};\n\n// Walk through a block & children recursively, parsing string content\n// into inline content where appropriate.\nvar processInlines = function(block) {\n    var node, event, t;\n    var walker = block.walker();\n    this.inlineParser.refmap = this.refmap;\n    this.inlineParser.options = this.options;\n    while ((event = walker.next())) {\n        node = event.node;\n        t = node.type;\n        if (!event.entering && (t === 'paragraph' || t === 'heading')) {\n            this.inlineParser.parse(node);\n        }\n    }\n};\n\nvar Document = function() {\n    var doc = new Node('document', [[1, 1], [0, 0]]);\n    return doc;\n};\n\n// The main parsing function.  Returns a parsed document AST.\nvar parse = function(input) {\n    this.doc = new Document();\n    this.tip = this.doc;\n    this.refmap = {};\n    this.lineNumber = 0;\n    this.lastLineLength = 0;\n    this.offset = 0;\n    this.column = 0;\n    this.lastMatchedContainer = this.doc;\n    this.currentLine = \"\";\n    if (this.options.time) { console.time(\"preparing input\"); }\n    var lines = input.split(reLineEnding);\n    var len = lines.length;\n    if (input.charCodeAt(input.length - 1) === C_NEWLINE) {\n        // ignore last blank line created by final newline\n        len -= 1;\n    }\n    if (this.options.time) { console.timeEnd(\"preparing input\"); }\n    if (this.options.time) { console.time(\"block parsing\"); }\n    for (var i = 0; i < len; i++) {\n        this.incorporateLine(lines[i]);\n    }\n    while (this.tip) {\n        this.finalize(this.tip, len);\n    }\n    if (this.options.time) { console.timeEnd(\"block parsing\"); }\n    if (this.options.time) { console.time(\"inline parsing\"); }\n    this.processInlines(this.doc);\n    if (this.options.time) { console.timeEnd(\"inline parsing\"); }\n    return this.doc;\n};\n\n\n// The Parser object.\nfunction Parser(options){\n    return {\n        doc: new Document(),\n        blocks: blocks,\n        blockStarts: blockStarts,\n        tip: this.doc,\n        oldtip: this.doc,\n        currentLine: \"\",\n        lineNumber: 0,\n        offset: 0,\n        column: 0,\n        nextNonspace: 0,\n        nextNonspaceColumn: 0,\n        indent: 0,\n        indented: false,\n        blank: false,\n        partiallyConsumedTab: false,\n        allClosed: true,\n        lastMatchedContainer: this.doc,\n        refmap: {},\n        lastLineLength: 0,\n        inlineParser: new InlineParser(options),\n        findNextNonspace: findNextNonspace,\n        advanceOffset: advanceOffset,\n        advanceNextNonspace: advanceNextNonspace,\n        addLine: addLine,\n        addChild: addChild,\n        incorporateLine: incorporateLine,\n        finalize: finalize,\n        processInlines: processInlines,\n        closeUnmatchedBlocks: closeUnmatchedBlocks,\n        parse: parse,\n        options: options || {}\n    };\n}\n\nmodule.exports = Parser;\n"],"sourceRoot":""}